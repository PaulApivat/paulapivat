<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data | Paul Apivat</title>
    <link>/tag/data/</link>
      <atom:link href="/tag/data/index.xml" rel="self" type="application/rss+xml" />
    <description>data</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2022 Paul Apivat Hanvongse. All Rights Reserved.</copyright><lastBuildDate>Sat, 16 Apr 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>data</title>
      <link>/tag/data/</link>
    </image>
    
    <item>
      <title>Ribbon Finance Aave Theta Vault</title>
      <link>/post/case_ribbon_aave_vault/</link>
      <pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate>
      <guid>/post/case_ribbon_aave_vault/</guid>
      <description>&lt;p&gt;I wanted to explore deposits and withdraws from the 
&lt;a href=&#34;https://app.ribbon.finance/v2/theta-vault/T-AAVE-C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AAVE Theta Covered Call Vault&lt;/a&gt; at Ribbon Finance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_vault_frontend.png&#34; alt=&#34;aave vault frontend&#34;&gt;&lt;/p&gt;
&lt;p&gt;I am specifically trying to query the &lt;strong&gt;Current Vault Deposits&lt;/strong&gt; number (5725.12 AAVE in the screenshot take above).&lt;/p&gt;
&lt;p&gt;Here was my workflow:&lt;/p&gt;
&lt;p&gt;First, grab the smart contract address for this vault: &lt;code&gt;0xe63151A0Ed4e5fafdc951D877102cf0977Abd365&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;check on etherscan:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_theta_etherscan.png&#34; alt=&#34;aave theta etherscan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Second, check to see if this contract has been 
&lt;a href=&#34;https://dune.xyz/0xBoxer/Is-my-Contract-decoded-yet?contract_address_t419c6=0xe63151A0Ed4e5fafdc951D877102cf0977Abd365&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;decoded&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_contract_decoded.png&#34; alt=&#34;aave contract decoded&#34;&gt;&lt;/p&gt;
&lt;p&gt;It has been decoded at the following table: &lt;code&gt;ribbon.RibbonThetaVault&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Third, run simple queries using the &lt;strong&gt;provided table name&lt;/strong&gt; filtering for this contract:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_theta_sample_queries.png&#34; alt=&#34;aave theta sample queries&#34;&gt;&lt;/p&gt;
&lt;p&gt;I ran 4 queries filtering for the &lt;code&gt;0xe63151A0Ed4e5fafdc951D877102cf0977Abd365&lt;/code&gt; contract address (Aave Theta Vault). Since I was interested in deposits and withdraws that&amp;rsquo;s where I started.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Question: If interested in deposits/withdraws from a smart contract, is it safe to assume either:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lsquo;contractname_call_deposit&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;contractname_call_withdraw&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;contractname_evt_deposit&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;contractname_evt_withdraw&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;would be a good place to start?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Out of the four tables, only &lt;code&gt;ribbon.&amp;quot;RibbonThetaVault_call_deposit&amp;quot;&lt;/code&gt; turned up any results.&lt;/p&gt;
&lt;p&gt;Because I would need &lt;strong&gt;both&lt;/strong&gt; deposits and withdraws, and only &amp;ldquo;_call_deposit&amp;rdquo; is returning any results, I am going to try an alternative abstraction table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;erc20.&amp;quot;ERC20_evt_Transfer&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since we are interested in deposits and withdrawals from the &lt;code&gt;Ribbon Aave Theta Vault&lt;/code&gt; the &lt;strong&gt;erc20.ERC20_evt_Transfer&lt;/strong&gt; table can be filtered for transactions &amp;ldquo;to&amp;rdquo;&amp;quot; (deposit) and &amp;ldquo;from&amp;rdquo; (withdrawal) the vault address.&lt;/p&gt;
&lt;p&gt;To recap, the addresses involved are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the &lt;code&gt;T-AAVE-C&lt;/code&gt; 
&lt;a href=&#34;%28https://app.ribbon.finance/v2/theta-vault/T-AAVE-C%29&#34;&gt;Vault contract&lt;/a&gt; &lt;code&gt;0xe63151A0Ed4e5fafdc951D877102cf0977Abd365&lt;/code&gt; (same as &lt;code&gt;rAAVE-THETA&lt;/code&gt; Token)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AAVE Token address: &lt;code&gt;0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9&lt;/code&gt; (users of the vault need to deposit AAVE Tokens)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;rsquo;s a sample query integrating these two addresses:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{python}&#34;&gt;WITH total_aave_vault_txns AS (
SELECT 
    &amp;quot;from&amp;quot;,
    &amp;quot;to&amp;quot;,
    value/10^18 AS aave_amt,
    contract_address,
    evt_block_time
FROM erc20.&amp;quot;ERC20_evt_Transfer&amp;quot;
WHERE contract_address = &#39;\x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9&#39;
AND &amp;quot;to&amp;quot; = &#39;\xe63151A0Ed4e5fafdc951D877102cf0977Abd365&#39;

UNION ALL

SELECT 
    &amp;quot;from&amp;quot;,
    &amp;quot;to&amp;quot;,
    -value/10^18 AS aave_amt,
    contract_address,
    evt_block_time
FROM erc20.&amp;quot;ERC20_evt_Transfer&amp;quot;
WHERE contract_address = &#39;\x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9&#39;
AND &amp;quot;from&amp;quot; = &#39;\xe63151A0Ed4e5fafdc951D877102cf0977Abd365&#39;
)
SELECT
    SUM(aave_amt)  -- 254.806773340645
FROM total_aave_vault_txns 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This 
&lt;a href=&#34;https://dune.xyz/queries/609486&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;query&lt;/a&gt; yields the same number as Aave Token contained in the contract&amp;rsquo;s wallet, which is &lt;code&gt;254.806773340645&lt;/code&gt; at the time of this writing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_vault_wallet.png&#34; alt=&#34;aave vault wallet&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is fine, but not what I&amp;rsquo;m looking for ðŸ˜¢&lt;/p&gt;
&lt;p&gt;Rather than the amount of AAVE token in the contract&amp;rsquo;s wallet (~254), I&amp;rsquo;m looking to see how many AAVE tokens users have &lt;em&gt;deposited&lt;/em&gt; in the vault (~5725), so now I&amp;rsquo;m going to dig into the contract.&lt;/p&gt;
&lt;h3 id=&#34;exploring-the-contract-code&#34;&gt;Exploring the Contract Code&lt;/h3&gt;
&lt;p&gt;I search and found 
&lt;a href=&#34;https://github.com/ribbon-finance/ribbon-v2/tree/master/contracts/vaults&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ribbon Finance V2&amp;rsquo;s Vault repo&lt;/a&gt;, which contains code for their most updated vaults. While some vaults, like stETH and Yearn, have their own folders, the Aave Theta vault does not so I navigate to &amp;ldquo;BaseVaults&amp;rdquo; to see solidity code for &lt;code&gt;RibbonThetaVault.sol&lt;/code&gt;, which is the same contract name I found when checking to see if the &lt;code&gt;0xe63151A0Ed4e5fafdc951D877102cf0977Abd365&lt;/code&gt; (Aave Theta vault) had been decoded (see above).&lt;/p&gt;
&lt;p&gt;I looked through two files in the 
&lt;a href=&#34;https://github.com/ribbon-finance/ribbon-v2/tree/master/contracts/vaults/BaseVaults&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BaseVaults&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RibbonThetaVault.sol&lt;/li&gt;
&lt;li&gt;base/RibbonVault.sol&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I start with &lt;code&gt;RibbonThetaVault.sol&lt;/code&gt; as this matches the table name in Dune when checking if the contract address had been decoded. I ran a search for &amp;ldquo;deposit&amp;rdquo; and &amp;ldquo;withdraw&amp;rdquo; and found the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenShort&lt;/li&gt;
&lt;li&gt;CloseShort&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;./aave_vault_open_close_short.png&#34; alt=&#34;aave vault open close short&#34;&gt;&lt;/p&gt;
&lt;p&gt;I created the following 
&lt;a href=&#34;https://dune.xyz/queries/609785&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;query&lt;/a&gt; in Dune to see if this could get me closer to the desired &amp;ldquo;Current Vault Deposits&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{python}&#34;&gt;WITH deposit_withdraw AS (
SELECT 
    &amp;quot;depositAmount&amp;quot;/10^18 AS aave_amt,
    contract_address,
    evt_tx_hash,
    evt_block_time
FROM ribbon.&amp;quot;RibbonThetaVault_evt_OpenShort&amp;quot;
WHERE contract_address = &#39;\xe63151A0Ed4e5fafdc951D877102cf0977Abd365&#39;

UNION ALL

SELECT
    -&amp;quot;withdrawAmount&amp;quot;/10^18 AS aave_amt,
    contract_address,
    evt_tx_hash,
    evt_block_time
FROM ribbon.&amp;quot;RibbonThetaVault_evt_CloseShort&amp;quot;
WHERE contract_address = &#39;\xe63151A0Ed4e5fafdc951D877102cf0977Abd365&#39;
)
SELECT
    *
FROM deposit_withdraw
ORDER BY evt_block_time DESC

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This query did manage to get &lt;strong&gt;Vault Activity&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_vault_activity.png&#34; alt=&#34;aave_vault_activity.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./aave_vault_activity2.png&#34; alt=&#34;aave_vault_activity2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Getting closer, but not quite there yet. I did notice one interesting descriptor in the 
&lt;a href=&#34;https://github.com/ribbon-finance/ribbon-v2/blob/master/contracts/vaults/BaseVaults/RibbonThetaVault.sol&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RibbonThetaVault code&lt;/a&gt; on line 24:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RibbonThetaVault should not inherit from any other contract aside from RibbonVault, RibbonThetaVaultStorage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Within the same directory, I&amp;rsquo;m now looking at &lt;code&gt;RibbonVault.sol&lt;/code&gt; and I see a &amp;ldquo;Deposit &amp;amp; Withdraws&amp;rdquo; section,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ribbon_vault_deposit_withdraws.png&#34; alt=&#34;ribbon_vault_deposit_withdraws&#34;&gt;&lt;/p&gt;
&lt;p&gt;with the following events &lt;strong&gt;emit&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;emit Deposit(creditor, amount, currentRound);&lt;/li&gt;
&lt;li&gt;emit InitiateWithdraw(msg.sender, numShares, currentRound);&lt;/li&gt;
&lt;li&gt;emit Withdraw(msg.sender, withdrawAmount, withdrawalShares);&lt;/li&gt;
&lt;li&gt;emit Redeem(msg.sender, numShares, depositReceipt.round);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This leads me back to where we started, both Deposit and Withdraw events did &lt;em&gt;not&lt;/em&gt; yield results when filtering for the AAVE Theta Vault contract address, while InitiateWithdraw and Redeem did.&lt;/p&gt;
&lt;p&gt;For context, I had 
&lt;a href=&#34;https://dune.xyz/queries/537056/1010779&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;previously&lt;/a&gt; tried joining &lt;code&gt;erc20.&amp;quot;ERC20_evt_Transfer&amp;quot;&lt;/code&gt; and &lt;code&gt;ethereum.&amp;quot;logs&amp;quot;&lt;/code&gt; to produce a slower query, but &lt;em&gt;that&lt;/em&gt; did not get me the desired &amp;lsquo;Current Vault Deposit&amp;rsquo; figure either.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;d like help with on-chain analysis, please 
&lt;a href=&#34;https://twitter.com/paulapivat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Demystifying Dune Analytics</title>
      <link>/post/demystifying_dune_analytics/</link>
      <pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate>
      <guid>/post/demystifying_dune_analytics/</guid>
      <description>&lt;p&gt;Although I had been using Dune to create 
&lt;a href=&#34;https://dune.xyz/paulapivat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dashboards&lt;/a&gt; for several months, much of the tool remained confusing. I would frequently get thrown off to open a new query and see this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./dune_table_list.png&#34; alt=&#34;dune table list&#34;&gt;&lt;/p&gt;
&lt;p&gt;I struggled to know &lt;em&gt;which&lt;/em&gt; table to use, until the 
&lt;a href=&#34;https://ournetwork.mirror.xyz/gP16wLY-9BA1E_ZuOSv1EUAgYGfK9mELNza8cfgMWPQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OurNetwork Learn&lt;/a&gt; courses, led by 
&lt;a href=&#34;https://twitter.com/andrewhong5297&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andrew Hong&lt;/a&gt; was released.&lt;/p&gt;
&lt;p&gt;While I&amp;rsquo;m still making my way through the materials, I&amp;rsquo;ve picked up some tips for other aspiring web3 data analysts.&lt;/p&gt;
&lt;h3 id=&#34;source-tables&#34;&gt;Source Tables&lt;/h3&gt;
&lt;p&gt;First, &lt;em&gt;most&lt;/em&gt; tables can be created from these three*:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ethereum.&amp;ldquo;transactions&amp;rdquo;&lt;/li&gt;
&lt;li&gt;ethereum.&amp;ldquo;logs&amp;rdquo;&lt;/li&gt;
&lt;li&gt;ethereum.&amp;ldquo;traces&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;*Also worth getting acquainted with these tables:&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;ethereum.&amp;ldquo;contracts&amp;rdquo;&lt;/li&gt;
&lt;li&gt;ethereum.&amp;ldquo;blocks&amp;rdquo;&lt;/li&gt;
&lt;li&gt;ethereum.&amp;ldquo;sigantures&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This fact alone elevated my understanding of Dune. This &lt;strong&gt;Table Mapping Guide&lt;/strong&gt; from 
&lt;a href=&#34;https://www.notion.so/Table-Mapping-Guide-2c12f7c8c5304aabb8078fcde3ce38f9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OurNetwork Learn Sessions&lt;/a&gt; provides a really nice graphical overview:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./table_mapping_guide_screenshot.png&#34; alt=&#34;table mapping guide&#34;&gt;&lt;/p&gt;
&lt;p&gt;It breaks down what happens in a smart contract transaction, at a high level. Take a transaction included in one block. For example, your wallet signs a transaction to send some tokens. There is a transfer function that&amp;rsquo;s called. Then an event is emitted/logged on-chain before it happens all over again in the next block. A caveat is the transfer of Ether as the native currency of Ethereum is technically not a token.&lt;/p&gt;
&lt;p&gt;One thing to note is that Dune Analytics maps &lt;strong&gt;on-chain&lt;/strong&gt; transaction (excluding pre-chain transactions, which would require engaging with a JSON-RPC endpoint for mempool analysis, out of the scope of this post).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From these three* tables, you can build up other tables in Dune.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This line in the guide made things click for me.&lt;/p&gt;
&lt;p&gt;You might wonder why bother with &amp;ldquo;other tables&amp;rdquo; when you can derive all the queries you need from these main 3. Speed and efficiency. Querying the &lt;code&gt;ethereum&lt;/code&gt; tables is akin to querying a large chain.&lt;/p&gt;
&lt;p&gt;Often times your queries simply time out, which leads us to the first step of any Dune Analytics analysis.&lt;/p&gt;
&lt;h3 id=&#34;decoding-the-contract&#34;&gt;Decoding the Contract&lt;/h3&gt;
&lt;p&gt;After multiple queries getting time out, I realized my approach was too slow and inefficient. To avoid this, check 
&lt;a href=&#34;https://dune.xyz/0xBoxer/Is-my-Contract-decoded-yet?contract_address=0x74C6CadE3eF61d64dcc9b97490d9FbB231e4BdCc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Is my Contract decoded yet?&lt;/a&gt; * courtesy of 
&lt;a href=&#34;https://twitter.com/0xBoxer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;0xBoxer&lt;/a&gt; at Dune.&lt;/p&gt;
&lt;p&gt;*Separate check for contracts on Polygon, xDai, BSC etc.&lt;/p&gt;
&lt;p&gt;The team has done the heavy data-engineering lift of going through smart contracts, decode individual functions, building a pipeline into SQL tables for easier querying. If you don&amp;rsquo;t see your contract of interest, you can 
&lt;a href=&#34;https://dune.xyz/contracts/new&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;submit it for decoding.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other 
&lt;a href=&#34;https://www.notion.so/Dune-Utility-Queries-6e6828030407476eac0bc12a021cb6c5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;useful Dune Utility Queries&lt;/a&gt; can be found 
&lt;a href=&#34;https://www.notion.so/Dune-Utility-Queries-6e6828030407476eac0bc12a021cb6c5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;converting-bytecode-to-numbers&#34;&gt;Converting Bytecode to Numbers&lt;/h3&gt;
&lt;p&gt;We can decode &lt;code&gt;topic1&lt;/code&gt; containing either a &lt;strong&gt;deposit&lt;/strong&gt; or &lt;strong&gt;withdraw&lt;/strong&gt; amount with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bytea2numeric( decode ( SUBSTRING ( encode(el.&amp;quot;data&amp;quot;, &#39;hex&#39;) , 1, 64 ), &#39;hex&#39;))/10^18&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and filter by either a deposit or withdraw event hash:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{python}&#34;&gt;WHERE el.topic1 = &#39;\x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15&#39; -- Deposit into Vault 

WHERE el.topic1 = &#39;\xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568&#39; -- Withdraw from Vault

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(h/t to Andrew Hong&amp;rsquo;s 
&lt;a href=&#34;https://towardsdatascience.com/your-guide-to-intermediate-sql-while-learning-ethereum-at-the-same-time-7b25119ef1e2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Intermediate SQL guide&lt;/a&gt; for this technique.)&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;d like help with on-chain analysis, please 
&lt;a href=&#34;https://twitter.com/paulapivat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
