<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Markdown | Paul Apivat</title>
    <link>/tag/r-markdown/</link>
      <atom:link href="/tag/r-markdown/index.xml" rel="self" type="application/rss+xml" />
    <description>R Markdown</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Paul Apivat Hanvongse. All Rights Reserved.</copyright><lastBuildDate>Thu, 17 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>R Markdown</title>
      <link>/tag/r-markdown/</link>
    </image>
    
    <item>
      <title>BBC Women of 2020</title>
      <link>/post/sunburst/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/post/sunburst/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/sequences/sequences.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/sunburst-binding/sunburst.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;load-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Libraries&lt;/h2&gt;
&lt;p&gt;The two main libraries are &lt;code&gt;tidyverse&lt;/code&gt; (mostly &lt;code&gt;dplyr&lt;/code&gt; so you can just load that if you want) and &lt;code&gt;sunburstR&lt;/code&gt;. There are other packages for sunburst plots including: &lt;a href=&#34;https://plotly.com/r/sunburst-charts/&#34;&gt;plotly&lt;/a&gt; and &lt;a href=&#34;https://github.com/didacs/ggsunburst&#34;&gt;ggsunburst (of ggplot)&lt;/a&gt;, but we’ll explore &lt;a href=&#34;https://www.rdocumentation.org/packages/sunburstR/versions/2.1.5/topics/sunburst&#34;&gt;sunburstR&lt;/a&gt; in this post.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(sunburstR)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-data-explore&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Data &amp;amp; Explore&lt;/h2&gt;
&lt;p&gt;The data is from &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-12-08/readme.md&#34;&gt;week 50 of TidyTuesday&lt;/a&gt;, exploring the BBC’s top 100 influential women of 2020.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;women &amp;lt;- read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-08/women.csv&amp;#39;)

head(women)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;add-continents&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Add Continents&lt;/h2&gt;
&lt;p&gt;The original dataset organized 100 women by category, country, role and description. I found that for employing the sunburst plot, I would want to group countries together by continents.&lt;/p&gt;
&lt;p&gt;I manually added country names to continent vectors, then added a new column to the &lt;code&gt;women&lt;/code&gt; dataframe to conditionally add continent name.&lt;/p&gt;
&lt;p&gt;We could then focus on six continents rather than 65 separate countries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add continent as character vector
asia &amp;lt;-  c(&amp;#39;Afghanistan&amp;#39;, &amp;#39;Bangladesh&amp;#39;, &amp;#39;China&amp;#39;, &amp;#39;Exiled Uighur from Ghulja (in Chinese, Yining)&amp;#39;, &amp;#39;Hong Kong&amp;#39;, &amp;#39;India&amp;#39;, &amp;#39;Indonesia&amp;#39;, &amp;#39;Iran&amp;#39;, &amp;#39;Iraq/UK&amp;#39;, &amp;#39;Japan&amp;#39;, &amp;#39;Kyrgyzstan&amp;#39;, &amp;#39;Lebanon&amp;#39;, &amp;#39;Malaysia&amp;#39;, &amp;#39;Myanmar&amp;#39;, &amp;#39;Nepal&amp;#39;, &amp;#39;Pakistan&amp;#39;, &amp;#39;Singapore&amp;#39;, &amp;#39;South Korea&amp;#39;, &amp;#39;Syria&amp;#39;, &amp;#39;Thailand&amp;#39;, &amp;#39;UAE&amp;#39;, &amp;#39;Vietnam&amp;#39;, &amp;#39;Yemen&amp;#39;)

south_america &amp;lt;- c(&amp;#39;Argentina&amp;#39;, &amp;#39;Brazil&amp;#39;, &amp;#39;Colombia&amp;#39;, &amp;#39;Ecuador&amp;#39;, &amp;#39;Peru&amp;#39;, &amp;#39;Venezuela&amp;#39;)
oceania &amp;lt;- c(&amp;#39;Australia&amp;#39;)
europe &amp;lt;- c(&amp;#39;Belarus&amp;#39;, &amp;#39;Finland&amp;#39;, &amp;#39;France&amp;#39;, &amp;#39;Germany&amp;#39;, &amp;#39;Italy&amp;#39;, &amp;#39;Netherlands&amp;#39;, &amp;#39;Northern Ireland&amp;#39;, &amp;#39;Norway&amp;#39;, &amp;#39;Republic of Ireland&amp;#39;, &amp;#39;Russia&amp;#39;, &amp;#39;Turkey&amp;#39;, &amp;#39;UK&amp;#39;, &amp;#39;Ukraine&amp;#39;, &amp;#39;Wales, UK&amp;#39;)
africa &amp;lt;- c(&amp;#39;Benin&amp;#39;, &amp;#39;DR Congo&amp;#39;, &amp;#39;Egypt&amp;#39;, &amp;#39;Ethiopia&amp;#39;, &amp;#39;Kenya&amp;#39;, &amp;#39;Morocco&amp;#39;, &amp;#39;Mozambique&amp;#39;, &amp;#39;Nigeria&amp;#39;, &amp;#39;Sierra Leone&amp;#39;, &amp;#39;Somalia&amp;#39;, &amp;#39;Somaliland&amp;#39;, &amp;#39;South Africa&amp;#39;, &amp;#39;Tanzania&amp;#39;, &amp;#39;Uganda&amp;#39;, &amp;#39;Zambia&amp;#39;, &amp;#39;Zimbabwe&amp;#39;)
north_america &amp;lt;- c(&amp;#39;El Salvador&amp;#39;, &amp;#39;Jamaica&amp;#39;, &amp;#39;Mexico&amp;#39;, &amp;#39;US&amp;#39;)

# add new column for continent
women &amp;lt;- women %&amp;gt;%
    mutate(continent = NA) 

# add continents to women dataframe
women$continent &amp;lt;- ifelse(women$country %in% asia, &amp;#39;Asia&amp;#39;, women$continent)
women$continent &amp;lt;- ifelse(women$country %in% south_america, &amp;#39;South America&amp;#39;, women$continent)
women$continent &amp;lt;- ifelse(women$country %in% oceania, &amp;#39;Oceania&amp;#39;, women$continent)
women$continent &amp;lt;- ifelse(women$country %in% europe, &amp;#39;Europe&amp;#39;, women$continent)
women$continent &amp;lt;- ifelse(women$country %in% africa, &amp;#39;Africa&amp;#39;, women$continent)
women$continent &amp;lt;- ifelse(women$country %in% north_america, &amp;#39;North America&amp;#39;, women$continent)

women&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-wrangling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Wrangling&lt;/h2&gt;
&lt;p&gt;The key to using the &lt;code&gt;sunburstR&lt;/code&gt; package with this specific dataset is the wrangling that happens to filter by continents we created above. We’ll also want to get rid of dashes with &lt;code&gt;mutate_at&lt;/code&gt; as dashes are structurally needed to render the sunburst plots.&lt;/p&gt;
&lt;p&gt;Below, I’ve filtered the &lt;code&gt;women&lt;/code&gt; data frame into Africa and Asia (the same could be done for North and South America and Europe as well).&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;two most important&lt;/strong&gt; operations here are the creation of the &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;V2&lt;/code&gt; columns that will later be parameters for rendering the sunburst plots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Filter for Africa
africa_name &amp;lt;- women %&amp;gt;%
    select(continent, category, role, name) %&amp;gt;%
    # remove dash within dplyr pipe
    mutate_at(vars(3, 4), funs(gsub(&amp;quot;-&amp;quot;, &amp;quot;&amp;quot;, .))) %&amp;gt;% 
    filter(continent==&amp;#39;Africa&amp;#39;) %&amp;gt;%
    mutate(
        path = paste(continent, category, role, name, sep = &amp;quot;-&amp;quot;)
    ) %&amp;gt;%
    slice(2:100) %&amp;gt;%
    mutate(
        V2 = 1
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `funs()` is deprecated as of dplyr 0.8.0.
## Please use a list of either functions or lambdas: 
## 
##   # Simple named list: 
##   list(mean = mean, median = median)
## 
##   # Auto named with `tibble::lst()`: 
##   tibble::lst(mean, median)
## 
##   # Using lambdas
##   list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_warnings()` to see where this warning was generated.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Filter for Asia
asia_name &amp;lt;- women %&amp;gt;%
    select(continent, category, role, name) %&amp;gt;%
    # remove dash within dplyr pipe
    mutate_at(vars(3, 4), funs(gsub(&amp;quot;-&amp;quot;, &amp;quot;&amp;quot;, .))) %&amp;gt;%
    filter(continent==&amp;#39;Asia&amp;#39;) %&amp;gt;%
    mutate(
        path = paste(continent, category, role, name, sep = &amp;quot;-&amp;quot;)
    ) %&amp;gt;%
    slice(2:100) %&amp;gt;%
    mutate(
        V2 = 1
    )&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sunburst-africa&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sunburst: Africa&lt;/h2&gt;
&lt;p&gt;Ultimately, I found the information best presented by continent as the &lt;em&gt;base&lt;/em&gt; of the sunburst plot, followed by category, specific roles and the names of each of the 100 women honored by the BBC.&lt;/p&gt;
&lt;p&gt;Moreover, by presenting the data by continent, you can focus on just five specific color as you decide on a palette.&lt;/p&gt;
&lt;p&gt;I wouldn’t recommend trying to pick a color for each role or name; it becomes too unweildy. Just pick five colors for the two inner most rings of the sunburst plot and it’ll shuffle the rest of the colors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Africa
sunburst(data = data.frame(xtabs(V2~path, africa_name)), legend = FALSE,
         colors = c(&amp;quot;D99527&amp;quot;, &amp;quot;6F7239&amp;quot;, &amp;quot;CE4B3C&amp;quot;, &amp;quot;C8AC70&amp;quot;, &amp;quot;018A9D&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;sunburst html-widget&#34; id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px; position:relative;&#34;&gt;
&lt;div&gt;
&lt;div class=&#34;sunburst-main&#34;&gt;
&lt;div class=&#34;sunburst-sequence&#34;&gt;&lt;/div&gt;
&lt;div class=&#34;sunburst-chart&#34;&gt;
&lt;div class=&#34;sunburst-explanation&#34; style=&#34;visibility:hidden;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sunburst-sidebar&#34;&gt;
&lt;input type=&#34;checkbox&#34; class=&#34;sunburst-togglelegend&#34; style=&#34;visibility:hidden;&#34;&gt;Legend&lt;/input&gt;
&lt;div class=&#34;sunburst-legend&#34; style=&#34;visibility:hidden;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:{&#34;children&#34;:[{&#34;name&#34;:&#34;Africa&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Creativity&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Artist and curator&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Mulenga Kapwepwe&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Musician&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Angelique Kidjo&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Rapper&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Houda Abouz&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Singer/songwriter&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Bulelwa Mkutukana&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Writer and filmmaker&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Tsitsi Dangarembga&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;},{&#34;name&#34;:&#34;Identity&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Filmmaker&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Uyaiedu  IkpeEtim&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Socialjustice activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Josina Machel&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;},{&#34;name&#34;:&#34;Knowledge&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Ishtar Lakhani&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Doctor&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Jemimah Kariuki&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Journalist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Douce Namwezi N&#39;Ibamba&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Lawyer&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Rebeca Gyumi&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Mental health expert&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Ethelreda NakimuliMpungu&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;},{&#34;name&#34;:&#34;Leadership&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Aisha Yesufu&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Campaigner&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Nadeen Ashraf&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Climate activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Vanessa Nakate&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Coptic nun&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Maggie Gobran&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Environmental activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Phyllis Omido&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;FGM educator&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Ubah Ali&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Mayor&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Yvonne AkiSawyerr&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Peace activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Ilwad Elman&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;}],&#34;colname&#34;:&#34;X1&#34;}],&#34;name&#34;:&#34;root&#34;},&#34;options&#34;:{&#34;legendOrder&#34;:null,&#34;colors&#34;:[&#34;D99527&#34;,&#34;6F7239&#34;,&#34;CE4B3C&#34;,&#34;C8AC70&#34;,&#34;018A9D&#34;],&#34;valueField&#34;:&#34;size&#34;,&#34;percent&#34;:true,&#34;count&#34;:false,&#34;explanation&#34;:null,&#34;breadcrumb&#34;:[],&#34;legend&#34;:false,&#34;sortFunction&#34;:null,&#34;sumNodes&#34;:true}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;sunburst-asia&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sunburst: Asia&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Asia
sunburst(data = data.frame(xtabs(V2~path, asia_name)), legend = FALSE,
         colors = c(&amp;quot;#e6e0ae&amp;quot;, &amp;quot;#dfbc5e&amp;quot;, &amp;quot;#ee6146&amp;quot;, &amp;quot;#d73c37&amp;quot;, &amp;quot;#b51f09&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;sunburst html-widget&#34; id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px; position:relative;&#34;&gt;
&lt;div&gt;
&lt;div class=&#34;sunburst-main&#34;&gt;
&lt;div class=&#34;sunburst-sequence&#34;&gt;&lt;/div&gt;
&lt;div class=&#34;sunburst-chart&#34;&gt;
&lt;div class=&#34;sunburst-explanation&#34; style=&#34;visibility:hidden;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sunburst-sidebar&#34;&gt;
&lt;input type=&#34;checkbox&#34; class=&#34;sunburst-togglelegend&#34; style=&#34;visibility:hidden;&#34;&gt;Legend&lt;/input&gt;
&lt;div class=&#34;sunburst-legend&#34; style=&#34;visibility:hidden;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:{&#34;children&#34;:[{&#34;name&#34;:&#34;Asia&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Creativity&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Actor&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Mahira Khan&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;},{&#34;name&#34;:&#34;Michelle Yeoh&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Architect&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Chu Kim Duc&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Feminist activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Nandar&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Filmmaker&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Waad  alKateab&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Landscape architect&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Kotchakorn Voraakhom&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Musician&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Isaivani&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Sake master brewer&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Miho Imada&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;},{&#34;name&#34;:&#34;Identity&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Hayat Mirshad&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;},{&#34;name&#34;:&#34;Laleh Osmany&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;UN Women ambassador/model&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Cindy Bishop&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Writer&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Muyesser Abdul’ehed Hendan&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;},{&#34;name&#34;:&#34;Knowledge&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Febfi Setyawati&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Computational geneticist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Pardis Sabeti&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Crematorium technician&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Sapana Roka Magar&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Doctor&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Leo YeeSin&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Global health leader&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Sania Nishtar&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Microgrid manager&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Iman Ghaleb AlHamli&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Minister for Advanced Technologies&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Sarah AlAmiri&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Plant virologist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Safaa Kumari&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Public health expert&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Nisreen Alwan&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Robotics team leader&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Somaya Faruqi&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Teacher&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Rima Sultana Rimu&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Writer&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Fang Fang&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;},{&#34;name&#34;:&#34;Leadership&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Athlete&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Manasi Joshi&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Climate activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Ridhima Pandey&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Disability activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Gulnaz Zhuzbaeva&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Environmental campaigner&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Salsabila Khairunnisa&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Human rights activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Nasrin Sotoudeh&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;KDCA Commissioner&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Jeong Eunkyeong&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Prodemocracy activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Agnes Chow&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Protest leader&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Bilkis&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;},{&#34;name&#34;:&#34;Student activist&#34;,&#34;children&#34;:[{&#34;name&#34;:&#34;Panusaya Sithijirawattanakul&#34;,&#34;size&#34;:1,&#34;colname&#34;:&#34;X4&#34;}],&#34;colname&#34;:&#34;X3&#34;}],&#34;colname&#34;:&#34;X2&#34;}],&#34;colname&#34;:&#34;X1&#34;}],&#34;name&#34;:&#34;root&#34;},&#34;options&#34;:{&#34;legendOrder&#34;:null,&#34;colors&#34;:[&#34;#e6e0ae&#34;,&#34;#dfbc5e&#34;,&#34;#ee6146&#34;,&#34;#d73c37&#34;,&#34;#b51f09&#34;],&#34;valueField&#34;:&#34;size&#34;,&#34;percent&#34;:true,&#34;count&#34;:false,&#34;explanation&#34;:null,&#34;breadcrumb&#34;:[],&#34;legend&#34;:false,&#34;sortFunction&#34;:null,&#34;sumNodes&#34;:true}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;And that’s it for visualizing the BBC’s top 100 influential women in 2020 with the &lt;code&gt;sunburstR&lt;/code&gt; package.&lt;/p&gt;
&lt;p&gt;For more content on data science, visualization, in R and Python, &lt;a href=&#34;https://twitter.com/paulapivat&#34;&gt;find me on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Going beyond summary statistics</title>
      <link>/post/datasaurus/</link>
      <pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/post/datasaurus/</guid>
      <description>


&lt;div id=&#34;datasaurus-introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Datasaurus Introduction&lt;/h2&gt;
&lt;p&gt;I recently came across the &lt;strong&gt;Datasaurus&lt;/strong&gt; dataset by Alberto Cairo on &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-10-13/readme.md&#34;&gt;#TidyTuesday&lt;/a&gt; and wanted to create a series of charts illustrating the lessons associated with this dataset, primarily to: &lt;a href=&#34;http://www.thefunctionalart.com/2016/08/download-datasaurus-never-trust-summary.html&#34;&gt;never trust summary statistics alone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, some context. Here’s Alberto’s &lt;a href=&#34;https://twitter.com/albertocairo/status/765167969139765250&#34;&gt;original tweet&lt;/a&gt; from years ago when he created this dataset:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;png/alberto_cairo.png&#34; alt=&#34;png&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;png&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This tweet alone doesn’t communicate why we shouldn’t trust summary statistics alone, so let’s unpack this. First we’ll load the various packages and data we’ll use.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;load-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Packages&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────── tidyverse 1.3.0 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ ggplot2 3.3.2     ✓ purrr   0.3.4
## ✓ tibble  3.0.3     ✓ dplyr   1.0.1
## ✓ tidyr   1.1.1     ✓ stringr 1.4.0
## ✓ readr   1.3.1     ✓ forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ────────────────────────────── tidyverse_conflicts() ──
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggcorrplot)
library(ggridges)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; : &lt;code&gt;datasaurus&lt;/code&gt; and &lt;code&gt;datasaurus_dozen&lt;/code&gt; are identical. The former is provided via #TidyTuesday, the latter from &lt;a href=&#34;https://www.autodesk.com/research/publications/same-stats-different-graphs&#34;&gt;this research paper&lt;/a&gt; discussing more advanced concepts beyond the scope of this document (i.e., simulated annealing).&lt;/p&gt;
&lt;p&gt;You’ll also note that &lt;code&gt;datasaurus_dozen&lt;/code&gt; and &lt;code&gt;datasaurus_wide&lt;/code&gt; are the same data, organized differently. The former in &lt;em&gt;long&lt;/em&gt; format and the latter, in &lt;em&gt;wide&lt;/em&gt; format - see here for &lt;a href=&#34;http://www.cookbook-r.com/Manipulating_data/Converting_data_between_wide_and_long_format/&#34;&gt;details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the most part, we’ll use &lt;code&gt;datasaurus_dozen&lt;/code&gt; throughout this document. We’ll use &lt;code&gt;datasaurus_wide&lt;/code&gt; when we get to the correlation section.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-13/datasaurus.csv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   dataset = col_character(),
##   x = col_double(),
##   y = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen &amp;lt;- read_tsv(&amp;#39;./data/DatasaurusDozen.tsv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   dataset = col_character(),
##   x = col_double(),
##   y = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_wide &amp;lt;- read_tsv(&amp;#39;./data/DatasaurusDozen-wide.tsv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Duplicated column names deduplicated: &amp;#39;away&amp;#39; =&amp;gt; &amp;#39;away_1&amp;#39; [2],
## &amp;#39;bullseye&amp;#39; =&amp;gt; &amp;#39;bullseye_1&amp;#39; [4], &amp;#39;circle&amp;#39; =&amp;gt; &amp;#39;circle_1&amp;#39; [6], &amp;#39;dino&amp;#39; =&amp;gt;
## &amp;#39;dino_1&amp;#39; [8], &amp;#39;dots&amp;#39; =&amp;gt; &amp;#39;dots_1&amp;#39; [10], &amp;#39;h_lines&amp;#39; =&amp;gt; &amp;#39;h_lines_1&amp;#39; [12],
## &amp;#39;high_lines&amp;#39; =&amp;gt; &amp;#39;high_lines_1&amp;#39; [14], &amp;#39;slant_down&amp;#39; =&amp;gt; &amp;#39;slant_down_1&amp;#39; [16],
## &amp;#39;slant_up&amp;#39; =&amp;gt; &amp;#39;slant_up_1&amp;#39; [18], &amp;#39;star&amp;#39; =&amp;gt; &amp;#39;star_1&amp;#39; [20], &amp;#39;v_lines&amp;#39;
## =&amp;gt; &amp;#39;v_lines_1&amp;#39; [22], &amp;#39;wide_lines&amp;#39; =&amp;gt; &amp;#39;wide_lines_1&amp;#39; [24], &amp;#39;x_shape&amp;#39; =&amp;gt;
## &amp;#39;x_shape_1&amp;#39; [26]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   .default = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## See spec(...) for full column specifications.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;eyeballing-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Eyeballing the data&lt;/h2&gt;
&lt;p&gt;Here are the first six rows of &lt;code&gt;datasaurus_dozen&lt;/code&gt; (long):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   dataset     x     y
##   &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 dino     55.4  97.2
## 2 dino     51.5  96.0
## 3 dino     46.2  94.5
## 4 dino     42.8  91.4
## 5 dino     40.8  88.3
## 6 dino     38.7  84.9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here are the first six rows of &lt;code&gt;datasaurus_wide&lt;/code&gt; (wide):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 26
##   away  away_1 bullseye bullseye_1 circle circle_1 dino  dino_1 dots  dots_1
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; 
## 1 x     y      x        y          x      y        x     y      x     y     
## 2 32.3… 61.41… 51.2038… 83.339776… 55.99… 79.2772… 55.3… 97.17… 51.1… 90.86…
## 3 53.4… 26.18… 58.9744… 85.499817… 50.03… 79.0130… 51.5… 96.02… 50.5… 89.10…
## 4 63.9… 30.83… 51.8720… 85.829737… 51.28… 82.4359… 46.1… 94.48… 50.2… 85.46…
## 5 70.2… 82.53… 48.1799… 85.045116… 51.17… 79.1652… 42.8… 91.41… 50.0… 83.05…
## 6 34.1… 45.73… 41.6832… 84.017940… 44.37… 78.1646… 40.7… 88.33… 50.5… 82.93…
## # … with 16 more variables: h_lines &amp;lt;chr&amp;gt;, h_lines_1 &amp;lt;chr&amp;gt;, high_lines &amp;lt;chr&amp;gt;,
## #   high_lines_1 &amp;lt;chr&amp;gt;, slant_down &amp;lt;chr&amp;gt;, slant_down_1 &amp;lt;chr&amp;gt;, slant_up &amp;lt;chr&amp;gt;,
## #   slant_up_1 &amp;lt;chr&amp;gt;, star &amp;lt;chr&amp;gt;, star_1 &amp;lt;chr&amp;gt;, v_lines &amp;lt;chr&amp;gt;, v_lines_1 &amp;lt;chr&amp;gt;,
## #   wide_lines &amp;lt;chr&amp;gt;, wide_lines_1 &amp;lt;chr&amp;gt;, x_shape &amp;lt;chr&amp;gt;, x_shape_1 &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are 13 variables, each with X- and Y- axes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary-statistics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Summary Statistics&lt;/h2&gt;
&lt;p&gt;First, we’ll note that if we just look at summary statistics (i.e., &lt;strong&gt;mean&lt;/strong&gt; and &lt;strong&gt;standard deviation&lt;/strong&gt;), we might conclude that these variables are all the &lt;em&gt;same&lt;/em&gt;. Moreover, within each variable, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values have very &lt;strong&gt;similarly low correlations&lt;/strong&gt; at ranging from -0.06 to -0.07.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen %&amp;gt;%
    group_by(dataset) %&amp;gt;%
    summarize(
        x_mean = mean(x),
        x_sd = sd(x),
        y_mean = mean(y),
        y_sd = sd(y),
        corr = cor(x,y)
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` ungrouping output (override with `.groups` argument)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 13 x 6
##    dataset    x_mean  x_sd y_mean  y_sd    corr
##    &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
##  1 away         54.3  16.8   47.8  26.9 -0.0641
##  2 bullseye     54.3  16.8   47.8  26.9 -0.0686
##  3 circle       54.3  16.8   47.8  26.9 -0.0683
##  4 dino         54.3  16.8   47.8  26.9 -0.0645
##  5 dots         54.3  16.8   47.8  26.9 -0.0603
##  6 h_lines      54.3  16.8   47.8  26.9 -0.0617
##  7 high_lines   54.3  16.8   47.8  26.9 -0.0685
##  8 slant_down   54.3  16.8   47.8  26.9 -0.0690
##  9 slant_up     54.3  16.8   47.8  26.9 -0.0686
## 10 star         54.3  16.8   47.8  26.9 -0.0630
## 11 v_lines      54.3  16.8   47.8  26.9 -0.0694
## 12 wide_lines   54.3  16.8   47.8  26.9 -0.0666
## 13 x_shape      54.3  16.8   47.8  26.9 -0.0656&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;boxplots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Boxplots&lt;/h2&gt;
&lt;p&gt;You could use &lt;code&gt;boxplots&lt;/code&gt; to show &lt;em&gt;slight&lt;/em&gt; variation in the distribution and &lt;strong&gt;median&lt;/strong&gt; values of these 13 variables. However, the &lt;strong&gt;mean&lt;/strong&gt; values, indicated with the red circles, are identical.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen %&amp;gt;%
    ggplot(aes(x = dataset, y = x, fill = dataset)) +
    geom_boxplot(alpha = 0.6) +
    stat_summary(fun = mean, geom = &amp;quot;point&amp;quot;, shape = 20, size = 6, color = &amp;quot;red&amp;quot;, fill = &amp;quot;red&amp;quot;) +
    scale_fill_brewer(palette = &amp;quot;Set3&amp;quot;) +
    theme_classic() +
    theme(legend.position = &amp;#39;none&amp;#39;) +
    labs(
        y = &amp;#39;13 variables&amp;#39;,
        x = &amp;#39;X-values&amp;#39;,
        title = &amp;quot;Boxplots: Slight differences in the distribution and median values (X-axis)&amp;quot;,
        subtitle = &amp;quot;Identical mean values&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12
## Returning the palette you asked for with that many colors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/boxplot_x-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here’s the same plot for &lt;code&gt;y&lt;/code&gt; values:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen %&amp;gt;%
    ggplot(aes(x = dataset, y = y, fill = dataset)) +
    geom_boxplot(alpha = 0.6) +
    stat_summary(fun = mean, geom = &amp;quot;point&amp;quot;, shape = 20, size = 6, color = &amp;quot;red&amp;quot;, fill = &amp;quot;red&amp;quot;) +
    scale_fill_brewer(palette = &amp;quot;Paired&amp;quot;) +
    theme_classic() +
    theme(legend.position = &amp;#39;none&amp;#39;) +
    labs(
        y = &amp;#39;13 variables&amp;#39;,
        x = &amp;#39;Y-values&amp;#39;,
        title = &amp;quot;Boxplots: Slight differences in the distribution and median values (Y-axis)&amp;quot;,
        subtitle = &amp;quot;Identical mean values&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Paired is 12
## Returning the palette you asked for with that many colors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/boxplot_y-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ridgeline-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ridgeline Plot&lt;/h2&gt;
&lt;p&gt;We can begin to get a sense for how these variables are different if we plot the distribution in different ways. The ridgeline plot begins to reveal aspects of the data that were hidden before.&lt;/p&gt;
&lt;p&gt;We can begin to see that certain variables have markedly different distribution shapes (i.e., &lt;code&gt;v_lines&lt;/code&gt;, &lt;code&gt;dots&lt;/code&gt;, &lt;code&gt;x_shape&lt;/code&gt;, &lt;code&gt;wide_lines&lt;/code&gt;), while having the same &lt;strong&gt;mean&lt;/strong&gt; value.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen %&amp;gt;%
    ggplot(aes(x = x, y = dataset, fill = dataset)) +
    geom_density_ridges_gradient(scale = 3, quantile_lines = T, quantile_fun = mean) +
    scale_fill_manual(values = c(&amp;#39;#a6cee3&amp;#39;, &amp;#39;#1f78b4&amp;#39;, &amp;#39;#b2df8a&amp;#39;, &amp;#39;#33a02c&amp;#39;, &amp;#39;#fb9a99&amp;#39;, &amp;#39;#e31a1c&amp;#39;, &amp;#39;#fdbf6f&amp;#39;, &amp;#39;#ff7f00&amp;#39;, &amp;#39;#cab2d6&amp;#39;, &amp;#39;#6a3d9a&amp;#39;, &amp;#39;#ffff99&amp;#39;, &amp;#39;#b15928&amp;#39;, &amp;#39;grey&amp;#39;)) +
    theme_classic() +
    theme(legend.position = &amp;#39;none&amp;#39;) +
    labs(
        x = &amp;quot;X-values&amp;quot;,
        y = &amp;quot;13 variables&amp;quot;,
        title = &amp;quot;Ridgeline Plot: More variation in the distribution (X-axis)&amp;quot;,
        subtitle = &amp;quot;Identical mean values&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Picking joint bandwidth of 5.46&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/ridgeline_x-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;y&lt;/code&gt; values, &lt;code&gt;high_lines&lt;/code&gt;, &lt;code&gt;dots&lt;/code&gt;, &lt;code&gt;circle&lt;/code&gt; and &lt;code&gt;star&lt;/code&gt; have obviously different distributions from the rest. Again, the &lt;strong&gt;mean&lt;/strong&gt; values are identical across variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen %&amp;gt;%
    ggplot(aes(x = y, y = dataset, fill = dataset)) +
    geom_density_ridges_gradient(scale = 3, quantile_lines = T, quantile_fun = mean) +
    scale_fill_manual(values = c(&amp;#39;#a6cee3&amp;#39;, &amp;#39;#1f78b4&amp;#39;, &amp;#39;#b2df8a&amp;#39;, &amp;#39;#33a02c&amp;#39;, &amp;#39;#fb9a99&amp;#39;, &amp;#39;#e31a1c&amp;#39;, &amp;#39;#fdbf6f&amp;#39;, &amp;#39;#ff7f00&amp;#39;, &amp;#39;#cab2d6&amp;#39;, &amp;#39;#6a3d9a&amp;#39;, &amp;#39;#ffff99&amp;#39;, &amp;#39;#b15928&amp;#39;, &amp;#39;grey&amp;#39;)) +
    theme_classic() +
    theme(legend.position = &amp;#39;none&amp;#39;) +
    labs(
        x = &amp;quot;Y-values&amp;quot;,
        y = &amp;quot;13 variables&amp;quot;,
        title = &amp;quot;Ridgeline Plot: More variation in the distribution (Y-axis)&amp;quot;,
        subtitle = &amp;quot;Identical mean values&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Picking joint bandwidth of 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/ridgeline_y-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;correlations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Correlations&lt;/h2&gt;
&lt;p&gt;If you skip visualizing the distribution and central tendencies and go straight to seeing how the variables correlate with each other, you could also miss some fundamental differences in the data.&lt;/p&gt;
&lt;p&gt;In particular, the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values across all 13 variables are &lt;em&gt;highlight correlated&lt;/em&gt;. With just knowledge of the summary statistics, one could be led to believe that these variables are &lt;em&gt;highly similar&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Below is an abbreviated &lt;strong&gt;correlation matrix&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggcorrplot)

# X-values
# selecting rows 2-143 
# turning all values from character to numeric
datasaurus_wide_x &amp;lt;- datasaurus_wide %&amp;gt;%
    slice(2:143) %&amp;gt;%
    select(away, bullseye, circle, dino, dots, h_lines, high_lines, slant_down, slant_up, star, v_lines, wide_lines, x_shape) %&amp;gt;%
    mutate_if(is.character, as.numeric)
    
# Y-values
# selecting rows 2-143 
# turning all values from character to numeric
datasaurus_wide_y &amp;lt;- datasaurus_wide %&amp;gt;%
    slice(2:143) %&amp;gt;%
    select(away_1, bullseye_1, circle_1, dino_1, dots_1, h_lines_1, high_lines_1, slant_down_1, slant_up_1, star_1, v_lines_1, wide_lines_1, x_shape_1) %&amp;gt;%
    mutate_if(is.character, as.numeric)


# correlation matrix for X values
corr_x &amp;lt;- round(cor(datasaurus_wide_x), 1)

# correlation matrix for Y values
corr_y &amp;lt;- round(cor(datasaurus_wide_y), 1)

head(corr_x[, 1:6])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          away bullseye circle dino dots h_lines
## away      1.0     -0.3   -0.3 -0.3 -0.3    -0.3
## bullseye -0.3      1.0    0.9  0.9  0.9     0.9
## circle   -0.3      0.9    1.0  0.9  0.8     0.9
## dino     -0.3      0.9    0.9  1.0  0.9     1.0
## dots     -0.3      0.9    0.8  0.9  1.0     0.9
## h_lines  -0.3      0.9    0.9  1.0  0.9     1.0&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;visualizing-the-correlation-matrix&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Visualizing the correlation matrix&lt;/h3&gt;
&lt;p&gt;Here is a correlation between the &lt;code&gt;x-values&lt;/code&gt; between all 13 variables. You can see that all variables, aside from &lt;code&gt;away&lt;/code&gt;, are highly correlated with each other.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# correlation between X-values
ggcorrplot(corr_x, hc.order = TRUE, 
           type=&amp;quot;lower&amp;quot;, 
           outline.color = &amp;quot;white&amp;quot;,
           ggtheme = ggplot2::theme_gray,
           colors = c(&amp;quot;#d8b365&amp;quot;, &amp;quot;#f5f5f5&amp;quot;, &amp;quot;#5ab4ac&amp;quot;),
           lab = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/corr_x_viz-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here is a correlation between the ‘y-values’ between all 13 variables. Again, aside from &lt;code&gt;away&lt;/code&gt;, all the variables are highly correlated with each other.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# correlation between Y-values
ggcorrplot(corr_y, hc.order = TRUE, 
           type=&amp;quot;lower&amp;quot;, 
           outline.color = &amp;quot;white&amp;quot;,
           ggtheme = ggplot2::theme_gray,
           colors = c(&amp;quot;#ef8a62&amp;quot;, &amp;quot;#f7f7f7&amp;quot;, &amp;quot;#67a9cf&amp;quot;),
           lab = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/corr_y_viz-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;facets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Facets&lt;/h2&gt;
&lt;p&gt;At this point, the &lt;strong&gt;boxplots&lt;/strong&gt; show us variables with &lt;em&gt;similar median&lt;/em&gt; and &lt;em&gt;identical mean&lt;/em&gt;; the &lt;strong&gt;ridgelines&lt;/strong&gt; begin to show us that some variables have different distributions. And the &lt;strong&gt;correlation matrix&lt;/strong&gt; suggests the variables are more similar than not.&lt;/p&gt;
&lt;p&gt;To really see their differences, we’ll need to use &lt;code&gt;facet_wrap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here we’ll use &lt;code&gt;facet_wrap&lt;/code&gt; to examine the histogram for &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values of all 13 variables. We started to see the differences in distribution between variables from the &lt;code&gt;ridgeline&lt;/code&gt; plots, but overlapping histograms provide another perspective.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# facet histogram (both-values)
datasaurus_dozen %&amp;gt;%
    group_by(dataset) %&amp;gt;%
    ggplot() +
    geom_histogram(aes(x=x, fill=&amp;#39;red&amp;#39;), alpha = 0.5, bins = 30) +
    geom_histogram(aes(x=y, fill=&amp;#39;green&amp;#39;), alpha = 0.5, bins = 30) +
    facet_wrap(~dataset) +
    scale_fill_discrete(labels = c(&amp;#39;y&amp;#39;, &amp;#39;x&amp;#39;)) +
    theme_classic() +
    labs(
        fill = &amp;#39;Axes&amp;#39;,
        x = &amp;#39;&amp;#39;,
        y = &amp;#39;Count&amp;#39;,
        title = &amp;#39;Faceted Histogram: x- and y-values&amp;#39;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/facet_histo-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scatter-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scatter Plot&lt;/h2&gt;
&lt;p&gt;However, if there’s one thing this dataset is trying to communicate its that there’s no subtitute for plotting the actual data points. No amount of summary statistics, central tendency or distribution is going to replace &lt;strong&gt;plotting actually data points&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Once we create the scatter plot with &lt;code&gt;geom_point&lt;/code&gt;, we see the big reveal with this dataset. That despite the similarities in central measures, for the most part similar distributions and high correlations, the 13 variables are &lt;strong&gt;wildly different&lt;/strong&gt; from each other.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datasaurus_dozen %&amp;gt;%
    group_by(dataset) %&amp;gt;%
    ggplot(aes(x=x, y=y, color=dataset)) +
    geom_point(alpha = 0.5) +
    facet_wrap(~dataset) +
    scale_color_manual(values = c(&amp;#39;#a6cee3&amp;#39;, &amp;#39;#1f78b4&amp;#39;, &amp;#39;#b2df8a&amp;#39;, &amp;#39;#33a02c&amp;#39;, &amp;#39;#fb9a99&amp;#39;, &amp;#39;#e31a1c&amp;#39;, &amp;#39;#fdbf6f&amp;#39;, &amp;#39;#ff7f00&amp;#39;, &amp;#39;#cab2d6&amp;#39;, &amp;#39;#6a3d9a&amp;#39;, &amp;#39;#ffff99&amp;#39;, &amp;#39;#b15928&amp;#39;, &amp;#39;grey&amp;#39;)) +
    theme_classic() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    labs(
        x = &amp;#39;X-axis&amp;#39;,
        y = &amp;#39;Y-axis&amp;#39;,
        title = &amp;#39;Faceted Scatter Plot&amp;#39;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/facet_scatter-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are other less common alternatives to the &lt;strong&gt;scatter plot&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;geom-density-2d&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Geom Density 2D&lt;/h2&gt;
&lt;p&gt;While not as clear as the &lt;strong&gt;scatter plot&lt;/strong&gt;, plotting the &lt;strong&gt;contours&lt;/strong&gt; of a 2D density estimate does show how very different the variables are from each other, despite similar summary statistics.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# contours of a 2D Density estimate
datasaurus_dozen %&amp;gt;%
    ggplot(aes(x=x, y=y)) +
    geom_density_2d() +
    theme_classic() +
    facet_wrap(~dataset) +
    labs(
        x = &amp;#39;X-axis&amp;#39;,
        y = &amp;#39;Y-axis&amp;#39;,
        title = &amp;#39;Contours of a 2D density estimate&amp;#39;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/geom_density_contour-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is a slight variation using &lt;code&gt;stat_density_2d&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# stat density 2d
datasaurus_dozen %&amp;gt;%
    ggplot(aes(x=x, y=y)) +
    stat_density_2d(aes(fill=y), geom = &amp;quot;polygon&amp;quot;, colour = &amp;#39;white&amp;#39;) +
    theme_classic() +
    facet_wrap(~dataset) +
    labs(
        x = &amp;#39;X-axis&amp;#39;,
        y = &amp;#39;Y-axis&amp;#39;,
        title = &amp;#39;Stat Density 2D estimate&amp;#39;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-11-16-datasaurus_files/figure-html/stat_density-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;density_2d&lt;/code&gt; plots are quite effective in showing how different the variables are and serve as a nice alternative to the more familiar scatter plot.&lt;/p&gt;
&lt;p&gt;Hopefully this vignette illustrates the importance of never trusting summary statistics (alone). Moreover, when visualizing, we should go beyond simply visualizing the data’s distribution or central tendency, but plotting the actually data points.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
