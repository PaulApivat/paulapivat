<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paul Apivat</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Paul Apivat</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2020 Paul Apivat Hanvongse. All Rights Reserved.</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Paul Apivat</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Creating and Looping through DataFrames</title>
      <link>/technical_notes/example_tech/python_tip2/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/python_tip2/</guid>
      <description>&lt;h2 id=&#34;creating-and-looping-through-list-of-tuples&#34;&gt;Creating and Looping through List of Tuples&lt;/h2&gt;
&lt;p&gt;If you come to Python from R, it&amp;rsquo;s not immediately obvious how Lists, Dictionaries, Tuples, Series, then Loops help you do the things you can do in R.&lt;/p&gt;
&lt;p&gt;You can begin to connect the dots when you see that Lists of Tuples are the building blocks of DataFrames - available in both languages to handle tidy (tabular) data.&lt;/p&gt;
&lt;h1 id=&#34;lists&#34;&gt;Lists&lt;/h1&gt;
&lt;p&gt;Lists are ordered and mutable collection of data. Below are lists of strings and integers.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name_list = [&#39;paul&#39;, &#39;apivat&#39;, &#39;marvin&#39;, &#39;pim&#39;, &#39;milin&#39;]
int_list = [3,4,5,2,5,6,7,5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;tuples&#34;&gt;Tuples&lt;/h1&gt;
&lt;p&gt;Tuples, also collections, are ordered and immutable. But more related to the handling of data, tuples can be converted to DataFrames (using the Pandas library). Below, the List of Tuples (data) is converted into a DataFrame.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pandas as pd

data = [
    (&#39;r1&#39;, &#39;c1&#39;, 11, 11),
    (&#39;r1&#39;, &#39;c2&#39;, 12, 12),
    (&#39;r2&#39;, &#39;c1&#39;, 21, 21),
    (&#39;r2&#39;, &#39;c2&#39;, 22, 22)
]

df = pd.DataFrame(data, columns=[&#39;R_Number&#39;, &#39;C_Number&#39;, &#39;Avg&#39;, &#39;Std&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;loops&#34;&gt;Loops&lt;/h1&gt;
&lt;p&gt;You can loop through lists of strings and integers.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int_list = [3,4,5,2,5,6,7,5]

for num in int_list:
    print(num)
    
name_list = [&#39;paul&#39;, &#39;apivat&#39;, &#39;marvin&#39;, &#39;pim&#39;, &#39;milin&#39;]

for name in name_list:
    print(name)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;looping-through-list-of-tuples-dataframe&#34;&gt;Looping through List of Tuples (DataFrame)&lt;/h1&gt;
&lt;p&gt;Just like you can loop through &lt;em&gt;any&lt;/em&gt; collection, you can loop through a list of tuples - which means you can loop through DataFrames.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Looping through column names
df = pd.DataFrame(data, columns=[&#39;R_Number&#39;, &#39;C_Number&#39;, &#39;Avg&#39;, &#39;Std&#39;])

for col_names in df:
    print(col_names)
    
# Looping through a specific column
for items in df[&#39;R_Number&#39;]:
    print(items)
    
# Looping through a specific row
for items in df.iloc[1]:
    print(items)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s the basic connection between python fundamental data structures and for-loop operations and data science.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Random Numbers &amp; Reproducibility in Python</title>
      <link>/technical_notes/example_tech/python_reproducibility/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/python_reproducibility/</guid>
      <description>&lt;h2 id=&#34;random-numbers-with-numpy&#34;&gt;Random Numbers with Numpy&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Numpy&lt;/code&gt; has a sub-module called &lt;code&gt;random&lt;/code&gt;. Technically both are of the &amp;lsquo;module&amp;rsquo; class. &lt;code&gt;numpy.random&lt;/code&gt; contains other methods like: &lt;code&gt;seed&lt;/code&gt;, &lt;code&gt;set_state&lt;/code&gt;, &lt;code&gt;standard_t&lt;/code&gt; etc.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Submodules

import numpy

print(&amp;quot;numpy.random is a&amp;quot;, type(numpy.random))
print(&amp;quot;numpy is a&amp;quot;, type(numpy))
print(&amp;quot;it contains names such as...&amp;quot;, dir(numpy.random)[-15:])
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h2&gt;
&lt;p&gt;When using &lt;code&gt;numpy.random&lt;/code&gt;, you can ensure reproducibility by accessing &lt;code&gt;numpy.random.seed(30)&lt;/code&gt;, which mirrors #Rstats&amp;rsquo; &lt;code&gt;set.seed(30)&lt;/code&gt; behavior.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import random

numpy.random.seed(30)
rolls = numpy.random.randint(low=1, high=6, size=10)
rolls
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Connecting BigQuery to Google Data Studio [Basic Setup]</title>
      <link>/technical_notes/example_tech/google_cloud_tip1/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/google_cloud_tip1/</guid>
      <description>&lt;h2 id=&#34;steps-for-connecting-bigquery-to-data-studio&#34;&gt;Steps for Connecting BigQuery to Data Studio&lt;/h2&gt;
&lt;p&gt;This note outlines the basic steps required to generate charts in Google Data Studio, specifically pulling data from BigQuery.&lt;/p&gt;
&lt;h1 id=&#34;bigquery&#34;&gt;BigQuery&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;The starting point is to generate a query in BigQuery&lt;/li&gt;
&lt;li&gt;Once a query is created, click &lt;strong&gt;Save Results&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;In the pop-up window, a prompt: &amp;ldquo;choose where to save the results data from the query&amp;rdquo;, save result as BigQuery Table&lt;/li&gt;
&lt;li&gt;Set project name (i.e., jobsbot)&lt;/li&gt;
&lt;li&gt;Set dataset name (i.e., internalmongo)&lt;/li&gt;
&lt;li&gt;Create table name, for the specific query (i.e., jobfieldname_ranking)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;google-data-studio&#34;&gt;Google Data Studio&lt;/h1&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Click Add Data&lt;/li&gt;
&lt;li&gt;Find BigQuery in Google Connectors&lt;/li&gt;
&lt;li&gt;Locate saved query table (see above) (i.e., My Projects &amp;gt; jobsbot (project) &amp;gt; internalmongo (dataset) &amp;gt; jobfieldname_ranking (table/specific query))&lt;/li&gt;
&lt;li&gt;Click Add&lt;/li&gt;
&lt;li&gt;Select &amp;lsquo;Add a Chart&amp;rsquo; (note: could be Table or Chart style)&lt;/li&gt;
&lt;li&gt;Optional: copy/paste Table to create a companion Chart for table&lt;/li&gt;
&lt;li&gt;Select Table; in Data Menu, select Metric, &amp;lsquo;Add Metric&amp;rsquo; to swap out generic default Report Count (for more informative data generated from the query)&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Python Setup Options</title>
      <link>/technical_notes/example_tech/python_tip1/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/python_tip1/</guid>
      <description>&lt;h2 id=&#34;setting-up-python-for-r-users&#34;&gt;Setting up Python for R Users&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve recently started #66DaysOfData and will be using this opportunity to make some headway into the world of Python. It&amp;rsquo;s reputation for having a complex, at times frustrating, setup process precedes itself and is probably warranted. That said, here are some tips to minimize that.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s my current OS environment. Mac users will have an older version of Python that comes with the computer, you can type &lt;code&gt;python --version&lt;/code&gt; into your terminal to find out. Here&amp;rsquo;s mine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;macOS Catalina version 10.15.5
Python 2.7.16
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;python-2-vs-python-3&#34;&gt;Python 2 vs Python 3&lt;/h1&gt;
&lt;p&gt;There appears to be general consensus for anyone starting out in Python that you&amp;rsquo;ll want Python 3. There&amp;rsquo;s no debate here. Just get Python 3. I found the easiest way to go to Python Release for Mac OS X, which as of this writing is Python 3.8.5 and use the 
&lt;a href=&#34;https://www.python.org/downloads/release/python-385/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;macOS 64-bit installer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once installed, you&amp;rsquo;ll want to check.&lt;/p&gt;
&lt;p&gt;Instead of &lt;code&gt;python --version&lt;/code&gt;, which checks Python 2, you&amp;rsquo;ll use &lt;code&gt;python3 --version&lt;/code&gt;. This implies that Python 3 isn&amp;rsquo;t merely a &amp;ldquo;newer&amp;rdquo; version of Python, but that they are completely different categories.&lt;/p&gt;
&lt;h1 id=&#34;anaconda&#34;&gt;Anaconda&lt;/h1&gt;
&lt;p&gt;While this isn&amp;rsquo;t my first choice of development environment, it is the first option that allowed me to get coding in Python the fastest.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll download the 
&lt;a href=&#34;https://www.anaconda.com/products/individual&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Individual Edition&lt;/a&gt; of the Anaconda, open-source platform. You&amp;rsquo;ll download the application for your desktop and you&amp;rsquo;ll find &lt;code&gt;Anaconda-Navigator&lt;/code&gt; in your list of applications (or where ever you chose to place your newly installed application).&lt;/p&gt;
&lt;p&gt;NOTE: Shortly after installing and using, the Desktop version of Anaconda froze and I had a difficult time even &amp;ldquo;Force Quitting&amp;rdquo; it, so my preferred method of launching Anaconda Navigator is to open the mac terminal and type in the command &lt;code&gt;anaconda-navigator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The navigator supports &lt;code&gt;Jupyter Notebooks&lt;/code&gt;, &lt;code&gt;PyCharm&lt;/code&gt; and even &lt;code&gt;RStudio&lt;/code&gt; among other environments.&lt;/p&gt;
&lt;p&gt;I will be using &lt;code&gt;Jupyter Notebooks&lt;/code&gt; while I get acclimated to Python, but ultimately i&amp;rsquo;m looking for interoperability with #Rstats.&lt;/p&gt;
&lt;h1 id=&#34;reticulate&#34;&gt;Reticulate&lt;/h1&gt;
&lt;p&gt;This is an &lt;code&gt;R package&lt;/code&gt; that allows you to run &lt;code&gt;Python&lt;/code&gt; code in &lt;code&gt;R&lt;/code&gt; environments. The feature I am looking forward to using is the &lt;code&gt;R Markdown&lt;/code&gt; document that allows me to run chunks of python code.&lt;/p&gt;
&lt;p&gt;Work-in-Progress: TBD&lt;/p&gt;
&lt;h1 id=&#34;vscode&#34;&gt;VSCode&lt;/h1&gt;
&lt;p&gt;This is another popular IDE with widely used Python Extension.&lt;/p&gt;
&lt;p&gt;Work-in-Progress: TBD&lt;/p&gt;
&lt;h1 id=&#34;pycharm&#34;&gt;PyCharm&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve heard this IDE most closely resembles RStudio in ease of use.&lt;/p&gt;
&lt;p&gt;Work-in-Progress: TBD&lt;/p&gt;
&lt;h1 id=&#34;spyder&#34;&gt;Spyder&lt;/h1&gt;
&lt;p&gt;This appears to be close approximation of the functionality in RStudio.&lt;/p&gt;
&lt;p&gt;Work-in-Progress: TBD&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 1</title>
      <link>/courses/example/example1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example1/</guid>
      <description>&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Technical Notes Page 1</title>
      <link>/technical_notes/example_tech/technical_notes1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/technical_notes1/</guid>
      <description>&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;technical-tip-1&#34;&gt;Technical Tip 1&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;technical-tip-2&#34;&gt;Technical Tip 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Styling tables with reactable</title>
      <link>/technical_notes/example_tech/rstats_viz_reactable/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_viz_reactable/</guid>
      <description>&lt;h2 id=&#34;setting-up-a-barebones-table-with-reactable&#34;&gt;Setting up a barebones table with {reactable}&lt;/h2&gt;
&lt;p&gt;There are several &lt;code&gt;packages&lt;/code&gt; to style your tables. This note will help you get setup with a basic table using the &lt;code&gt;reactable&lt;/code&gt; package. With just a few lines of code, you can have a table with pagination and column sorting.&lt;/p&gt;
&lt;p&gt;The data for this note comes from 
&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-09-22/readme.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TidyTuesday 2020-09-22, &amp;ldquo;Himalayan Climbers&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This note assumes that data has been wrangled and in &lt;code&gt;tibble&lt;/code&gt; form, ready to be styled into a table.&lt;/p&gt;
&lt;h2 id=&#34;sample-tibble&#34;&gt;Sample Tibble&lt;/h2&gt;
&lt;p&gt;Here, I&amp;rsquo;ve saved my tibble of 20 rows and 3 columns in &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; df

# A tibble: 20 x 3
   peak            attempts fail_rate
   &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
 1 Everest            21813     0.54 
 2 Cho Oyu             8890     0.570
 3 Ama Dablam          8406     0.479
 4 Manaslu             4593     0.621
 5 Dhaulagiri I        2592     0.789
 6 Makalu              2405     0.764
 7 Lhotse              2379     0.638
 8 Baruntse            2190     0.708
 9 Pumori              1780     0.706
10 Annapurna I         1669     0.821
11 Kangchenjunga       1385     0.682
12 Himlung Himal       1308     0.573
13 Annapurna IV         812     0.845
14 Putha Hiunchuli      738     0.599
15 Tilicho              670     0.781
16 Tukuche              462     0.753
17 Jannu                339     0.782
18 Langtang Lirung      338     0.84 
19 Makalu II            322     0.758
20 Nuptse               303     0.934

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;load-libraries&#34;&gt;Load Libraries&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;library(tidyverse)
library(reactable)
library(htmltools)

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;basic-table&#34;&gt;Basic Table&lt;/h2&gt;
&lt;p&gt;The amazing thing is, with just this one line, you have a barebones table with &lt;strong&gt;pagination&lt;/strong&gt; (with 20 rows, it shows 10 at a time; this can be adjusted) and  &lt;strong&gt;sorting&lt;/strong&gt; for both columns.&lt;/p&gt;
&lt;p&gt;You can check out the rest of the repo 
&lt;a href=&#34;https://github.com/PaulApivat/tidytuesday/blob/master/2020/himalaya/exploratory.R&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reactable(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;adding-bar-charts-for-each-row&#34;&gt;Adding Bar Charts for Each Row&lt;/h2&gt;
&lt;p&gt;Of course, bare bones is not much to look at, so adding bar charts is essential for visually communicating quantities and percentages. However, you&amp;rsquo;ll need to use the &lt;code&gt;htmltools&lt;/code&gt; package to begin adding &lt;code&gt;div&lt;/code&gt; to your chart.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Bar Charts can be added with a function 

bar_chart &amp;lt;- function(label, width = &amp;quot;100%&amp;quot;, height = &amp;quot;14px&amp;quot;, fill = &amp;quot;#00bfc4&amp;quot;, background = NULL){
    bar &amp;lt;- div(style = list(background = fill, width = width, height = height))
    chart &amp;lt;- div(style = list(flexGrow = 1, marginLeft = &amp;quot;6px&amp;quot;, background = background), bar)
    div(style = list(display = &amp;quot;flex&amp;quot;, alignItems = &amp;quot;center&amp;quot;), label, chart)
}


# The bar_chart function is then inserted into the numeric columns

reactable(
    df,
    defaultSorted = &amp;quot;attempts&amp;quot;,
    columns = list(
        peak = colDef(
            name = &amp;quot;Peaks&amp;quot;
        ),
        attempts = colDef(
            name = &amp;quot;Attempts (#)&amp;quot;,
            defaultSortOrder = &amp;quot;desc&amp;quot;,
            #format = colFormat(separators = TRUE),
            
            # Render Bar charts using a custom cell render function
            cell = function(value){
                width &amp;lt;- paste0(value * 100 / max(df$attempts), &amp;quot;%&amp;quot;)
                # Add thousands separators
                value &amp;lt;- format(value, big.mark = &amp;quot;,&amp;quot;)
                # Fix each label using the width of the widest number (incl. thousands separators)
                value &amp;lt;- format(value, width = 9, justify = &#39;right&#39;)
                bar_chart(value, width = width, fill = &amp;quot;#3fc1c9&amp;quot;)
            },
            # And left-align the columns
            align = &amp;quot;left&amp;quot;,
            # Use the operating system&#39;s default monospace font, and
            # preserve the white space to prevent it from being collapsed by default
            style = list(fontFamily = &amp;quot;monospace&amp;quot;, whiteSpace = &amp;quot;pre&amp;quot;)
        ),
        fail_rate = colDef(
            name = &amp;quot;Fail (%)&amp;quot;,
            defaultSortOrder = &amp;quot;desc&amp;quot;,
            #format = colFormat(percent = TRUE, digits = 1)
            
            # Render Bar charts using a custom cell render function
            cell = function(value){
                # Format as percentage with 1 decimal place
                value &amp;lt;- paste0(format(value * 100, nsmall = 1), &amp;quot;%&amp;quot;)
                # Fix width here to align single and double-digit percentages
                value &amp;lt;- format(value, width = 5, justify = &amp;quot;right&amp;quot;)
                bar_chart(value, width = value, fill = &amp;quot;#fc5185&amp;quot;, background = &amp;quot;#e1e1e1&amp;quot;)
            },
            # And left-align the columns
            align = &amp;quot;left&amp;quot;,
            style = list(fontFamily = &amp;quot;monospace&amp;quot;, whiteSpace = &amp;quot;pre&amp;quot;)
        )
    )
)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Decimals to Integers</title>
      <link>/technical_notes/example_tech/rstats_viz_scale_x/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_viz_scale_x/</guid>
      <description>&lt;h2 id=&#34;changing-the-x-axis-from-decimals-to-integers&#34;&gt;Changing the x-axis from decimals to integers&lt;/h2&gt;
&lt;p&gt;When creating plots in &lt;code&gt;ggplot2&lt;/code&gt; you&amp;rsquo;ll often want to customize the x-axis so that values appear on a certain interval. In the example below, I wanted to change the intervals from 0.25, 0.50, 0.75 to 1,2,3,4 and so on. In this specific instance, I wanted &lt;em&gt;each&lt;/em&gt; season of the show Friends to have its down tick on the x-axis (note: the show had ten seasons).&lt;/p&gt;
&lt;p&gt;This operation changes the x-axis ticks from having decimals to being integers.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggplot)

ggplot(total_data, aes(x = season, y = episode, fill=imdb_rating)) +
    geom_tile() +
    scale_fill_gradient(low = &#39;#FFF580&#39;, high = &#39;#FF4238&#39;) +
    
    ## the seq() function defines the start and end numbers
    ## &#39;by =&#39; indicates the desired interval
    scale_x_continuous(breaks = seq(1,10, by = 1)) + 
    
    theme_classic()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GGPlot Flavored Treemaps</title>
      <link>/technical_notes/example_tech/rstats_viz_treemapify/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_viz_treemapify/</guid>
      <description>&lt;h2 id=&#34;treemapify&#34;&gt;Treemapify&lt;/h2&gt;
&lt;p&gt;There are several options for visualizing treemaps in R. This note focuses on  
&lt;a href=&#34;https://cran.r-project.org/web/packages/treemapify/vignettes/introduction-to-treemapify.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Treemapify&lt;/a&gt;, a package maintained by 
&lt;a href=&#34;https://github.com/wilkox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;David Wilkins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I favor this approach over the &lt;code&gt;treemap&lt;/code&gt; package because it is compatible with &lt;code&gt;ggplot2&lt;/code&gt; and allows users to access its&amp;rsquo; functionality.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example Treemap I created to visualize the dominant emotions displayed for the iconic 90&amp;rsquo;s sitcom, Friends. You can find out more about the 
&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-09-08/readme.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Friends dataset here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other visualizations I created for the Friends project can also be found 
&lt;a href=&#34;https://github.com/PaulApivat/tidytuesday/tree/master/2020/friends&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below, we can see that &lt;code&gt;geom_treemap&lt;/code&gt;, &lt;code&gt;geom_treemap_subgroup_border&lt;/code&gt; and &lt;code&gt;geom_treemap_subgroup_text&lt;/code&gt; are layers that works seamlessly with other layers like &lt;code&gt;scale_fill_manual&lt;/code&gt;, &lt;code&gt;theme&lt;/code&gt;, and &lt;code&gt;labs&lt;/code&gt; that are staples of the ggplot2 package.&lt;/p&gt;
&lt;p&gt;Bottom line, it&amp;rsquo;s easier to customize treemaps from the &lt;code&gt;treemapify&lt;/code&gt; package than the &lt;code&gt;treemap&lt;/code&gt; package.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(treemapify)

ggplot(friends_emo_tree, aes(area = n, label = speaker, subgroup = emotion)) +
    geom_treemap(aes(fill = emotion, alpha = n)) +
    geom_treemap_subgroup_border(color = &#39;white&#39;) +
    geom_treemap_subgroup_text(place = &#39;bottom&#39;, grow = T, alpha = 0.3, color = &#39;black&#39;,
                               min.size = 0) +
    geom_treemap_text(color = &#39;white&#39;, fontface = &#39;italic&#39;, place = &#39;centre&#39;, reflow = T) +
    scale_fill_manual(values = c(&#39;#FF4238&#39;, &#39;#FFDC00&#39;, &#39;#42A2D6&#39;, &#39;#9A0006&#39;, &#39;#FFF580&#39;, &#39;#00009E&#39;)) +
    theme(
        plot.background = element_rect(fill = &#39;#36454F&#39;),
        legend.position = &#39;none&#39;,
        title = element_text(colour = &#39;white&#39;, family = &#39;Friends&#39;)
    ) +
    labs(
        title = &#39;The One with the Dominant Emotions&#39;,
        caption = &#39;Viz: @paulapivat | Data: #TidyTuesday&#39;
    )
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Visualize Scatterplots with Marginal Distribution using ggExtra</title>
      <link>/technical_notes/example_tech/data_viz_tip2/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/data_viz_tip2/</guid>
      <description>&lt;h2 id=&#34;marginal-distribution-with-ggplot2-and-ggextra&#34;&gt;Marginal Distribution with ggplot2 and ggExtra&lt;/h2&gt;
&lt;p&gt;The data in this example is from the UN 
&lt;a href=&#34;https://unstats.un.org/sdgs/indicators/database/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Statistics Division&lt;/a&gt; Sustainable Development Goal, Indicator 4.4.1.&lt;/p&gt;
&lt;p&gt;Also check out the 
&lt;a href=&#34;https://www.r-graph-gallery.com/277-marginal-histogram-for-ggplot2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;r-graph-gallery.com&lt;/a&gt; for inspiration.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the breakdown:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load Packages and Libraries&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The key here is the &lt;code&gt;ggExtra&lt;/code&gt; package.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&#39;ggExtra&#39;)
library(ggExtra)
library(tidyverse)

&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Create a basic scatter plot&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The key here is using &lt;code&gt;pivot_wider&lt;/code&gt; to give all &lt;code&gt;Type of skill&lt;/code&gt; their own columns. We&amp;rsquo;ll then pick out specific columns (i.e., COPA, EMAIL, PCPR) to summarize, then plot on the x- and y- axes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Basic Scatter Plot (color cluster by Gender)
p &amp;lt;- data %&amp;gt;%
    select(GeoAreaName, TimePeriod, Sex, `Type of skill`, Value) %&amp;gt;%
    group_by(GeoAreaName, TimePeriod, Sex, `Type of skill`, Value) %&amp;gt;%
    pivot_wider(names_from = `Type of skill`, values_from = Value) %&amp;gt;%
    mutate(
        COPA = as.numeric(COPA),
        EMAIL = as.numeric(EMAIL),
        PCPR = as.numeric(PCPR)
    ) %&amp;gt;%
    # Group by GeoAreaName, across TimePeriod, Sex
    group_by(GeoAreaName, Sex) %&amp;gt;%
    summarize(
        avg_COPA = mean(COPA, na.rm = TRUE),
        avg_EMAIL = mean(EMAIL, na.rm = TRUE),
        avg_PCPR = mean(PCPR, na.rm = TRUE)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    ggplot(aes(x = avg_PCPR, y = avg_EMAIL, color = Sex)) + 
    geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Use &lt;code&gt;ggMarginal()&lt;/code&gt; to create the marginal distribution along the side of the scatter plots. This is a function from the &lt;code&gt;ggExtra&lt;/code&gt; package.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# Scatter Plot with Marginal Distribution
ggMarginal(p, type = &#39;histogram&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This particular chart is especially useful to highlight different distributions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Calculating 25th, 50th and 75th Percentile of Column Values</title>
      <link>/technical_notes/example_tech/rstats_tip4/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_tip4/</guid>
      <description>&lt;h2 id=&#34;calculating-percentiles&#34;&gt;Calculating Percentiles&lt;/h2&gt;
&lt;p&gt;When we have a list of values in a column, how can we determine which values are under/over the 25th percentile, 50th percentile or 75th percentile?&lt;/p&gt;
&lt;p&gt;Here the example are countries&amp;rsquo; &lt;em&gt;average percentages&lt;/em&gt; of the population with, broadly speaking, ICT Skills as determine by the Sustainable Development Goals, 
&lt;a href=&#34;https://unstats.un.org/wiki/display/SDGeHandbook/Indicator&amp;#43;4.4.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Indicator 4.4.1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are three methods. First, manually calculating values for the 25th, 50th and 75th percentile with the &lt;code&gt;quantile()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Country mean_values at 25th, 50th and 75th percentile 

data %&amp;gt;%
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod, Units) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(Value = as.numeric(Value)) %&amp;gt;%
    group_by(GeoAreaName) %&amp;gt;%
    summarize(
        mean_value = mean(Value)
    ) %&amp;gt;%
    mutate(
        min_mean = min(mean_value),
        iqr_25_percentile = quantile(mean_value, probs = c(0.25)),
        iqr_50_percentile = quantile(mean_value, probs = c(0.50)),
        iqr_75_percentile = quantile(mean_value, probs = c(0.75)),
        max_mean = max(mean_value)
    ) %&amp;gt;%
    arrange(desc(mean_value)) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The second approach is to use the &lt;code&gt;ntile()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Creating bins using ntile()

data %&amp;gt;%
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod, Units) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(Value = as.numeric(Value)) %&amp;gt;%
    group_by(GeoAreaName) %&amp;gt;%
    summarize(
        mean_value = mean(Value)
    ) %&amp;gt;%
    mutate(
        mean_value_binned = ntile(mean_value, 4)
    ) %&amp;gt;%
    arrange(desc(mean_value))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The third approach uses the &lt;code&gt;purrr&lt;/code&gt; package and the &lt;code&gt;partial&lt;/code&gt; function that can be used with &lt;code&gt;dplyr&#39;s&lt;/code&gt; &lt;code&gt;summarize_at()&lt;/code&gt; function. Check out the 
&lt;a href=&#34;https://tbradley1013.github.io/2018/10/01/calculating-quantiles-for-groups-with-dplyr-summarize-and-purrr-partial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
## Using purrr
library(purrr)
    
p &amp;lt;- c(0.25, 0.50, 0.75)

p_names &amp;lt;- map_chr(p, ~paste0(.x*100, &amp;quot;%&amp;quot;))

p_funs &amp;lt;- map(p, ~partial(quantile, probs = .x, na.rm = TRUE)) %&amp;gt;%
    set_names(nm = p_names)

p_funs

data %&amp;gt;%
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod, Units) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(Value = as.numeric(Value)) %&amp;gt;%
    group_by(GeoAreaName) %&amp;gt;%
    summarize(
        mean_value = mean(Value)
    ) %&amp;gt;%
    summarize_at(vars(mean_value), funs(!!!p_funs))

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Does order of operation matter among dplyr functions?</title>
      <link>/technical_notes/example_tech/rstats_tip5/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_tip5/</guid>
      <description>&lt;h2 id=&#34;data-wrangling-does-order-matter&#34;&gt;Data Wrangling: Does Order matter?&lt;/h2&gt;
&lt;p&gt;In short, yes, it matters. But when and where?&lt;/p&gt;
&lt;p&gt;Below are examples to highlight when function order matters and when it doesn&amp;rsquo;t. The source for the raw data used in this illustration are from the United Nations&amp;rsquo; Statistics Division for 
&lt;a href=&#34;https://unstats.un.org/sdgs/indicators/database/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sustainable Development Goals&lt;/a&gt; (SDG) Indicators (Goal 4, Target 4.4).&lt;/p&gt;
&lt;p&gt;See also UN Statistics Wiki on 
&lt;a href=&#34;https://unstats.un.org/wiki/display/SDGeHandbook/Indicator&amp;#43;4.4.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Indicator 4.4.1&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Example chain of functions to determine proportion of Thailand&#39;s population to have certain ICT skills in 2018

data %&amp;gt;%
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(
        Value = as.double(Value)
    ) %&amp;gt;%
    filter(GeoAreaName == &#39;Thailand&#39;) %&amp;gt;% 
    filter(TimePeriod == 2018) %&amp;gt;% 
    group_by(type_of_skill) %&amp;gt;%
    summarize(
        mean_value = mean(Value),
        median_value = median(Value)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    arrange(desc(mean_value))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, the &lt;code&gt;filter&lt;/code&gt; functions are moved up to be before &lt;code&gt;rename&lt;/code&gt; and &lt;code&gt;mutate&lt;/code&gt;. The ordering here does &lt;strong&gt;not&lt;/strong&gt; matter.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data %&amp;gt;%
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod) %&amp;gt;%
    
    # putting filter before rename, mutate is fine
    filter(GeoAreaName == &#39;Thailand&#39;) %&amp;gt;% 
    filter(TimePeriod == 2018) %&amp;gt;% 
    
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(
        Value = as.double(Value)
    ) %&amp;gt;%
    group_by(type_of_skill) %&amp;gt;%
    summarize(
        mean_value = mean(Value),
        median_value = median(Value)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    arrange(desc(mean_value))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Furthermore, we could even experiment with the &lt;code&gt;filter&lt;/code&gt; function being before or after &lt;code&gt;select&lt;/code&gt;. Here, ordering also does &lt;strong&gt;not&lt;/strong&gt; matter.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data %&amp;gt;%
    filter(GeoAreaName == &#39;Thailand&#39;) %&amp;gt;% 
    filter(TimePeriod == 2018) %&amp;gt;% 
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(
        Value = as.double(Value)
    ) %&amp;gt;%
    group_by(type_of_skill) %&amp;gt;%
    summarize(
        mean_value = mean(Value),
        median_value = median(Value)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    arrange(desc(mean_value))

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is there order &lt;strong&gt;does&lt;/strong&gt; matter. When we try to move the two &lt;code&gt;filter&lt;/code&gt; functions below &lt;code&gt;group_by&lt;/code&gt;, &lt;code&gt;summarize&lt;/code&gt; and &lt;code&gt;ungroup&lt;/code&gt;, the filtering does &lt;em&gt;not&lt;/em&gt; work. By the time we get to &lt;code&gt;filter(GeoAreaName == &#39;Thailand&#39;)&lt;/code&gt; in this example, GeoAreaName has been removed because we did &lt;em&gt;not&lt;/em&gt; &lt;code&gt;group_by&lt;/code&gt; &lt;code&gt;GeoAreaName&lt;/code&gt;, so we get an error.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Running this code, we&#39;ll get the ERROR: Problem with `filter()` input `..1`. x object &#39;GeoAreaName&#39; not found â¹ Input `..1` is 
# `GeoAreaName == &amp;quot;Thailand&amp;quot;`.

data %&amp;gt;%
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod) %&amp;gt;%
    relocate(Sex, Value, GeoAreaName) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(
        Value = as.double(Value)
    ) %&amp;gt;%
    # filter was previously here
    group_by(type_of_skill) %&amp;gt;%
    summarize(
        mean_value = mean(Value),
        median_value = median(Value)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    # moving filter down below group_by &amp;amp; summarize() does not work
    filter(GeoAreaName == &#39;Thailand&#39;) %&amp;gt;% 
    filter(TimePeriod == 2018) %&amp;gt;% 
    arrange(desc(mean_value))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, if we want to use &lt;code&gt;filter&lt;/code&gt; on the &lt;em&gt;results&lt;/em&gt; of the &lt;code&gt;mutate&lt;/code&gt; function, we see that order &lt;strong&gt;does&lt;/strong&gt; matter. By the time we get to the final &lt;code&gt;filter(Value &amp;lt; 10)&lt;/code&gt;, the &lt;code&gt;Value&lt;/code&gt; variable is no longer available to us because we did not &lt;code&gt;group_by&lt;/code&gt; and &lt;code&gt;summarize&lt;/code&gt; by Value (instead we created &lt;code&gt;mean_value&lt;/code&gt; and &lt;code&gt;median_value&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
data %&amp;gt;%
    filter(GeoAreaName == &#39;Thailand&#39;) %&amp;gt;% 
    filter(TimePeriod == 2018) %&amp;gt;% 
    select(GeoAreaName, Value, Sex, `Type of skill`, TimePeriod) %&amp;gt;%
    rename(type_of_skill = `Type of skill`) %&amp;gt;%
    mutate(
        Value = as.double(Value)
    ) %&amp;gt;%
    # filtering for Values less than 10 does work here
    filter(Value &amp;lt; 10) %&amp;gt;%
    group_by(type_of_skill) %&amp;gt;%
    summarize(
        mean_value = mean(Value),
        median_value = median(Value)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    arrange(desc(mean_value)) %&amp;gt;%
    # filter for Values less than 10 does not work down here
    filter(Value &amp;lt; 10)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Creating a dendrogram with R and ggraph</title>
      <link>/technical_notes/example_tech/data_viz_tip1/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/data_viz_tip1/</guid>
      <description>&lt;h2 id=&#34;nested-and-hierarchical-data&#34;&gt;Nested and Hierarchical Data&lt;/h2&gt;
&lt;p&gt;When you have data with multiple subgroups, one option is to treat them as nested and/or hierarchical data.&lt;/p&gt;
&lt;p&gt;In this technical note, I&amp;rsquo;ll outline how to create a dendrogram.&lt;/p&gt;
&lt;p&gt;The data used is from the 
&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-08-18/readme.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Extinct Plants&lt;/a&gt; data set from 
&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TidyTuesday&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the breakdown:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load Packages and Libraries&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;ggraph&amp;quot;)
install.packages(&amp;quot;igraph&amp;quot;)
library(ggraph)
library(igraph)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Create a data frame with three levels&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Taking the &lt;code&gt;plants&lt;/code&gt; data frame, I do some wrangling to get the desired columns.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;plants_data &amp;lt;- plants %&amp;gt;%
    select(group, binomial_name) %&amp;gt;%
    group_by(group) %&amp;gt;%
    arrange(group) %&amp;gt;% 
    mutate(
        level1 = &#39;center&#39;,
        level2 = group,
        level3 = binomial_name
    ) %&amp;gt;%
    # important to ungroup here
    ungroup() %&amp;gt;%
    select(level1:level3) 

&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Create an edge list&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# transform it to an edge list
plants_edges_level1_2 &amp;lt;- plants_data %&amp;gt;% 
    select(level1, level2) %&amp;gt;% 
    unique %&amp;gt;% 
    rename(from=level1, to=level2)

plants_edges_level2_3 &amp;lt;- plants_data %&amp;gt;% 
    select(level2, level3) %&amp;gt;% 
    unique %&amp;gt;% 
    rename(from=level2, to=level3)

plants_edge_list=rbind(plants_edges_level1_2, plants_edges_level2_3)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Plot a basic chart&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Because I have many observations, I&amp;rsquo;m optiing to use a &amp;ldquo;circular&amp;rdquo; dendrogram.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# plot plant dendogram
plantgraph &amp;lt;- graph_from_data_frame(plants_edge_list)

ggraph(plantgraph, layout = &amp;quot;dendrogram&amp;quot;, circular = TRUE) +
    geom_edge_diagonal() +
    geom_node_point() +
    theme_void()
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Add text to the end of the edges&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# add text &amp;amp; color(leaf)
ggraph(plantgraph, layout = &amp;quot;dendrogram&amp;quot;, circular = TRUE) +
    geom_edge_diagonal() +
    geom_node_text(aes(label = name, filter=leaf), hjust = 1, size = 1) +
    geom_node_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;NOTE: The breakdown of plant groupings are listed below. We can see the Flowering Plants &lt;em&gt;disproportionately&lt;/em&gt; out number other groups like Ferns &amp;amp; Allies, Cycad, Mosses, Algae and Conifer.&lt;/p&gt;
&lt;p&gt;When visualizing, we&amp;rsquo;re better off separating Flowering Plants from the other groups.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;plants %&amp;gt;%
    group_by(group) %&amp;gt;%
    tally(sort = TRUE)

# A tibble: 6 x 2
  group                n
  &amp;lt;chr&amp;gt;            &amp;lt;int&amp;gt;
1 Flowering Plant    471
2 Ferns and Allies    13
3 Cycad                8
4 Mosses               4
5 Algae                3
6 Conifer              1

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here&amp;rsquo;s a sample picture of the plants&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./png/data_viz_tip1_pic1.png&#34; alt=&#34;dendrogram&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./data_viz_tip1_pic1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;















&lt;figure id=&#34;figure-dendrogram&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./data_viz_tip1_pic1.png&#34; data-caption=&#34;Dendrogram.&#34;&gt;


  &lt;img src=&#34;./data_viz_tip1_pic1.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Dendrogram.
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Using the pivot_wider() function</title>
      <link>/technical_notes/example_tech/rstats_tip3/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_tip3/</guid>
      <description>&lt;p&gt;With 
&lt;a href=&#34;https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidyr 1.0.0&lt;/a&gt;, there are several enhancements, one of which are &lt;code&gt;pivot_wider()&lt;/code&gt; and &lt;code&gt;pivot_longer()&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;using-pivot_wider&#34;&gt;Using pivot_wider()&lt;/h2&gt;
&lt;p&gt;In another 
&lt;a href=&#34;https://paulapivat.com/technical_notes/example_tech/rstats_tip2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;post&lt;/a&gt;, the &lt;code&gt;spread()&lt;/code&gt; function was introduced as a way to observe the &amp;ldquo;tidy&amp;rdquo; principle of data formatting for analysis.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;pivot_wider()&lt;/code&gt; function is an updated of &lt;code&gt;spread()&lt;/code&gt; and is much more intuitive. Here&amp;rsquo;s how it works:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# PIVOT_WIDER - even better than Spread

data %&amp;gt;%
    filter(GeoAreaName==&amp;quot;Morocco&amp;quot; | GeoAreaName==&amp;quot;Qatar&amp;quot;) %&amp;gt;% 
    select(GeoAreaName, TimePeriod, Sex, `Type of skill`, Value) %&amp;gt;%
    group_by(GeoAreaName, TimePeriod, Sex, `Type of skill`, Value) %&amp;gt;%
    pivot_wider(names_from = `Type of skill`, values_from = Value) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this data set, &lt;code&gt;Type of skill&lt;/code&gt; represents, broadly speaking, ICT Skills broken down into eight categories in this column. By using &lt;code&gt;pivot_wider()&lt;/code&gt; each sub-category of ICT Skills gets it&amp;rsquo;s &lt;strong&gt;own&lt;/strong&gt; column, thus making the overall data frame &lt;em&gt;wider&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;using-pivot_longer&#34;&gt;Using pivot_longer()&lt;/h2&gt;
&lt;p&gt;Conversely, there&amp;rsquo;s also &lt;code&gt;pivot_longer&lt;/code&gt; for the opposite effect. This next code chunk is part of my attempt for 
&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TidyTuesday&lt;/a&gt; (&amp;lsquo;Extinct Plants&amp;rsquo; for the week of 2020-08-18)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;cols&lt;/code&gt; parameter determines the range of columns to be changed from wide to long. The &lt;code&gt;names_to&lt;/code&gt; parameter sets the new column name and &lt;code&gt;values_to&lt;/code&gt; indicates the value of the new columns.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# PIVOT_LONGER - better than Gather

plants %&amp;gt;%
    select(binomial_name, threat_AA:action_NA) %&amp;gt;%
    pivot_longer(cols = threat_AA:action_NA, names_to = &amp;quot;action&amp;quot;, values_to = &amp;quot;count&amp;quot;) %&amp;gt;%
    ggplot(aes(x = binomial_name, y = action, fill = count)) +
    geom_tile() +
    theme(axis.text.x = element_text(angle = 90, hjust = 1))

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Use the spread() function</title>
      <link>/technical_notes/example_tech/rstats_tip2/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_tip2/</guid>
      <description>&lt;p&gt;One principle of &lt;code&gt;tidy&lt;/code&gt; data is to change from wide to long; and conversely, long to wide.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a concrete example:&lt;/p&gt;
&lt;h2 id=&#34;using-spread&#34;&gt;Using spread()&lt;/h2&gt;
&lt;p&gt;The first part of the below pre-processing steps include subsetting the original data frame (data) by selecting two countries for comparison (Morocco and Qatar) on specific variables such as: &lt;code&gt;GeoAreaName&lt;/code&gt;, &lt;code&gt;TimePeriod&lt;/code&gt;, &lt;code&gt;Sex&lt;/code&gt;, &lt;code&gt;Type of skill&lt;/code&gt; and &lt;code&gt;Value&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then employing &lt;code&gt;group_by&lt;/code&gt; to ensure all rows are unique. The next line is key as it addresses an error that each row must be marked by a unique id key.&lt;/p&gt;
&lt;p&gt;Finally, the &lt;code&gt;spread()&lt;/code&gt; function allows us to see each countries&amp;rsquo; relative performance on various 
&lt;a href=&#34;http://tcg.uis.unesco.org/4-4-1-proportion-of-youth-and-adults-with-information-and-communications-technology-ict-skills-by-type-of-skill/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ICT skills&lt;/a&gt;. Please consult meta-data for more details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data %&amp;gt;%
    filter(GeoAreaName==&amp;quot;Morocco&amp;quot; | GeoAreaName==&amp;quot;Qatar&amp;quot;) %&amp;gt;% 
    select(GeoAreaName, TimePeriod, Sex, `Type of skill`, Value) %&amp;gt;%
    group_by(GeoAreaName, TimePeriod, Sex, `Type of skill`, Value) %&amp;gt;%
	
    # Error: Each row of output must be identified by a unique combination of keys.
    # rowid_to_column() address this error
	
    tibble::rowid_to_column() %&amp;gt;%
    spread(key = `Type of skill`, value = Value)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Make your work reproducible</title>
      <link>/technical_notes/example_tech/rstats_tip1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/rstats_tip1/</guid>
      <description>&lt;p&gt;Understanding reproducibility and the &lt;code&gt;set.seed()&lt;/code&gt; function in &lt;code&gt;R&lt;/code&gt; is best achieved through generating various random numbers. Here are some more tips for making your work reproducible:&lt;/p&gt;
&lt;h2 id=&#34;using-setseed&#34;&gt;Using set.seed()&lt;/h2&gt;
&lt;p&gt;Example of reproducibility in fitting ML models using set.seed()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#First Line
set.seed(1234)   

#Second Line
model_05_rand_forest_ranger &amp;lt;- rand_forest(
    mode = &amp;quot;regression&amp;quot;, mtry = 4, trees = 1000, min_n = 10
    ) %&amp;gt;%
    set_engine(&amp;quot;ranger&amp;quot;, splitrule = &amp;quot;extratrees&amp;quot;, importance = &amp;quot;impurity&amp;quot;) %&amp;gt;%
    fit(price ~ ., data = train_tbl %&amp;gt;% select(-id, -model, -model_tier))

#Third Line
model_05_rand_forest_ranger %&amp;gt;% calc_metrics(test_tbl)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;random-numbers&#34;&gt;Random Numbers&lt;/h2&gt;
&lt;p&gt;Here are several ways to get random numbers. These examples are informed by the &lt;code&gt;R Cookbook&lt;/code&gt;, see 
&lt;a href=&#34;http://www.cookbook-r.com/Numbers/Generating_random_numbers/#:~:text=For%20uniformly%20distributed%20%28flat%29%20random,is%20from%200%20to%201.&amp;amp;text=To%20generate%20numbers%20from%20a,the%20standard%20deviation%20is%201.&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# get one random number using runif() from base-R, stats package
# default 0 to 1
runif(1)

# get two random numbers
runif(2)

# get a vector of three random numbers
# increase range beyond the default, -10 to 110
runif(3, min = -10, max = 110)

# ensure three random numbers do *not* have decimals
# use floor() function to round down
floor(runif(3, min = -10, max = 110))

# sample() function does the same thing - using just one function
# replace parameter: should sampling be with or without replacement?
sample(-10:110, 3, replace = TRUE)

# Reproducibility
# use set.seed() before any of the aforementioned random number generators

set.seed(123)
sample(-10:110, 3, replace = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;random-numbers-from-a-normal-distribution&#34;&gt;Random Numbers from a Normal Distribution&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Get five random numbers from a normal distribution
# Here the default is mean = 0, standard deviation = 1.
rnorm(5)

# Change mean and standard deviation away from default
rnorm(5, mean = 66, sd = 12)

# Ensure reproducibility with set.seed()
set.seed(123)
rnorm(5, mean = 66, sd = 12)

# Ensure normal distribution by setting sufficiently large number with rnorm()
# Ensure reproducibility
# Plot a histogram

set.seed(123)
x &amp;lt;- rnorm(500, mean = 66, sd = 12)
hist(x)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 2</title>
      <link>/courses/example/example2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example2/</guid>
      <description>&lt;p&gt;Here are some more tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-3&#34;&gt;Tip 3&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-4&#34;&gt;Tip 4&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Technical Notes Page 2</title>
      <link>/technical_notes/example_tech/technical_notes2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/technical_notes/example_tech/technical_notes2/</guid>
      <description>&lt;p&gt;Here are some more tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;technical-tip-3&#34;&gt;Technical Tip 3&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;technical-tip-4&#34;&gt;Technical Tip 4&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Machine learning as a service</title>
      <link>/post/mlaas/</link>
      <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/mlaas/</guid>
      <description>&lt;h2 id=&#34;creating-api-endpoints-in-python-with-flask&#34;&gt;Creating API endpoints in Python with Flask&lt;/h2&gt;
&lt;p&gt;In this post, we&amp;rsquo;ll create a minimal API endpoint that allows users to make request to calculate the area of a rectangle. The following code sets up an API endpoint locally. We&amp;rsquo;ll import &lt;code&gt;Flask&lt;/code&gt;, a lightweight web application framework and &lt;code&gt;CORS&lt;/code&gt; (cross-origin resource sharing) which allows for various HTTP requests.&lt;/p&gt;
&lt;p&gt;We have two endpoints, one basic &amp;ldquo;hello world&amp;rdquo; and the other calculate the area (i.e., width x height).&lt;/p&gt;
&lt;p&gt;This is saved in &lt;code&gt;App.py&lt;/code&gt;. Then command to run this file is &lt;code&gt;python3 App.py&lt;/code&gt;. The last line ensures the API is running locally on &lt;code&gt;localhost:5000&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request
from flask_cors import CORS, cross_origin
import joblib
import numpy as np 

app = Flask(__name__)
CORS(app)

@app.route(&#39;/&#39;)
def helloworld():
    return &#39;Helloworld&#39;

# Example request: http://localhost:5000/area?w=50&amp;amp;h=3
@app.route(&#39;/area&#39;, methods=[&#39;GET&#39;])
@cross_origin()
def area():
    w = float(request.values[&#39;w&#39;])
    h = float(request.values[&#39;h&#39;])
    return str(w * h)

if __name__ == &#39;__main__&#39;:
    app.run(host=&#39;0.0.0.0&#39;, port=5000, debug=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can just run &lt;code&gt;localhost:5000&lt;/code&gt; and get &lt;code&gt;Helloworld&lt;/code&gt; or make a request to get the &lt;strong&gt;area&lt;/strong&gt;, &lt;code&gt;http://localhost:5000/area?w=20&amp;amp;h=33&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;training-a-logistic-regression-classification-model&#34;&gt;Training a Logistic Regression Classification model&lt;/h2&gt;
&lt;p&gt;After setting up some demo API endpoints, it&amp;rsquo;s time to create a basic Machine Learning Model. We&amp;rsquo;ll create a Logistic Regression model to classify flowers from the &lt;strong&gt;Iris&lt;/strong&gt; dataset. This will be created in a &lt;code&gt;jupyter notebook&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;testing-the-api-endpoint-on-postman&#34;&gt;Testing the API endpoint on Postman&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Essential Readings in Data Science</title>
      <link>/post/data_science_canon/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/data_science_canon/</guid>
      <description>&lt;h2 id=&#34;data-science-literature-review&#34;&gt;Data Science Literature Review&lt;/h2&gt;
&lt;p&gt;I saw an 
&lt;a href=&#34;https://twitter.com/KellyBodwin/status/1303083136046170112?s=20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;intriguing question&lt;/a&gt; posed on Twitter and some of the responses were illuminating.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./reading_list.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s 
&lt;a href=&#34;https://twitter.com/beeonaposy/status/1191798851289649154?s=20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;another variant&lt;/a&gt; of the question:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ds_canon.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Although Data Science has a long history, it&amp;rsquo;s considered a relatively young field.&lt;/p&gt;
&lt;p&gt;This space will be used to document recommended reading for new entrants:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Downey, Allen (2016) There is only one test. 
&lt;a href=&#34;http://allendowney.blogspot.com/2016/06/there-is-still-only-one-test.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wickham, Hadley (2014) Tidy Data. The Journal of Statistical Software, vol 59. 
&lt;a href=&#34;https://vita.had.co.nz/papers/tidy-data.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;original&lt;/a&gt;, 
&lt;a href=&#34;https://tidyr.tidyverse.org/articles/tidy-data.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;update&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;James, G., Witten, D., Hastie, T. &amp;amp; Tibshirani, R. (2014) An Introduction to Statistical Learning with Applications in R. 
&lt;a href=&#34;http://faculty.marshall.usc.edu/gareth-james/ISL/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shmueli, G. (2010) To explain or to predict? Statistical Science, 25(3), 289-310. 
&lt;a href=&#34;https://projecteuclid.org/euclid.ss/1294167961&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hernan, M.A., Hsu, J. &amp;amp; Healy, B. (2019) A second chance to get causal inference right: A classification of Data Science tasks. Chance, vol 32(1). 
&lt;a href=&#34;https://amstat.tandfonline.com/doi/full/10.1080/09332480.2019.1579578&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gelman, A., Pasarica, C. &amp;amp; Dodhia, R. (2002) Let&amp;rsquo;s practice what we preach: Turning tables into graphs. The American Statistician, vol 56(2). 
&lt;a href=&#34;https://www.tandfonline.com/doi/abs/10.1198/000313002317572790&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scott Formann-Roe (June, 2012) Understanding the Bias-Variance Tradeoff. 
&lt;a href=&#34;http://scott.fortmann-roe.com/docs/BiasVariance.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Donoho, D (2017) 50 Years of Data Science. Journal of Computational and Graphical Statistics, vol 26(4). 
&lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1080/10618600.2017.1384734&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wilson, G., Bryan, J., Cranston, K., Kitzes, J., Nederbragt, L. &amp;amp; Teal, T.K. (2017) Good enough practices in scientific computing. Plos Computational Biology. 
&lt;a href=&#34;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005510&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kevin Markham (2019) 100 pandas tricks to save you time and energy. 
&lt;a href=&#34;https://www.dataschool.io/python-pandas-tips-and-tricks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chris Albon&amp;rsquo;s code snippets. 
&lt;a href=&#34;https://chrisalbon.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Howard, J. &amp;amp; Gugger, S. (Aug 4, 2020) Deep Learning for Coders with fastai and PyTorch: AI Applications without a PhD 1st Ed. 
&lt;a href=&#34;https://course.fast.ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Brandon Rohrer (Jan, 2020) End-to-End Machine Learning: Complete Course Catalog. 
&lt;a href=&#34;https://end-to-end-machine-learning.teachable.com/p/complete-course-library-full-end-to-end-machine-learning-catalog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;; 
&lt;a href=&#34;https://e2eml.school/blog.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;second source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;John Rauser (Dec, 2016) How Humans See Data 
&lt;a href=&#34;https://www.youtube.com/watch?v=fSgEeI2Xpdc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;youtube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Broman, K.W. &amp;amp; Woo, K.H. (2018) Data Organization in Spreadsheets. The American Statistician, vol 72(1). 
&lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1080/00031305.2017.1375989&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sculley, D., Holt, G., Golovin, D., Davydov, E., Phillips, T., Ebner, D., Chaudhary, V., &amp;amp; Young, M. (2014) Machine Learning: The High Interest Credit Card of Technical Debt. 
&lt;a href=&#34;https://research.google/pubs/pub43146/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3Blue1Brown for Linear Algebra 
&lt;a href=&#34;https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;youtube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenny Bryan. Stat 545: Data Wrangling, Exploration and Analysis with R. 
&lt;a href=&#34;https://stat545.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>A collection of weird pretty plots</title>
      <link>/post/ggplot_art/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/ggplot_art/</guid>
      <description>&lt;h2 id=&#34;tidytuesday-2020-08-18-week-34&#34;&gt;TidyTuesday 2020-08-18 (week 34)&lt;/h2&gt;
&lt;p&gt;In the process of exploring dendrograms, I create jheri curls :)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./plant_dendogram_mess.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Another plot with less hair:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./dendrogram_plant.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;I call this Disco Fire:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./disco_fire.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing Custom Functions into the Workflow</title>
      <link>/post/custom-functions/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/custom-functions/</guid>
      <description>


&lt;div id=&#34;context&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;In web development, functions are everywhere and are written to get even the smallest tasks done like allowing users to click on a button or controlling where and how a pop-up modal appears. In data analysis, you can go without using functions as long as youâre working on small scale projects and do not need to share your code with others.&lt;/p&gt;
&lt;p&gt;Moreover, they can make your life a lot easier if you want to avoid copying and pasting your code in a bunch of different places (it also makes your code less error prone and easier to update).&lt;/p&gt;
&lt;p&gt;Functions may require a &lt;strong&gt;slight&lt;/strong&gt; perspective shift for those who arenât familiar. In this post, I want to share how I &lt;strong&gt;snuck&lt;/strong&gt; functions into my workflow for a specific project.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;slipping-custom-functions-into-the-workflow&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Slipping Custom Functions into the Workflow&lt;/h2&gt;
&lt;p&gt;The most intuitive way, in my opinion, to introduce functions is to take a certain data pre-processing sequence and &lt;strong&gt;turn it into a function&lt;/strong&gt;. Below, I have a newly created dataframe called &lt;code&gt;net_sales_year_month&lt;/code&gt; that is a dataframe with three columns (net_sales, Year, Month).&lt;/p&gt;
&lt;p&gt;Suppose my objective is to add a &lt;code&gt;Day&lt;/code&gt; and &lt;code&gt;month_year&lt;/code&gt; column, that combines Year, Month and Day (yyyy-mm-dd) into a &lt;code&gt;date&lt;/code&gt; type. The pre-processing task would be to take &lt;code&gt;net_sales_year_month&lt;/code&gt; and use the mutate function to create some new columns.&lt;/p&gt;
&lt;p&gt;This is fine and well if youâre doing this &lt;strong&gt;one time&lt;/strong&gt;, but what if you need to repeat this operation on multiple columns?&lt;/p&gt;
&lt;p&gt;Thatâs where a &lt;strong&gt;custom function&lt;/strong&gt; comes in.&lt;/p&gt;
&lt;p&gt;For example, the function below called &lt;code&gt;create_ymd_function&lt;/code&gt; simply &lt;strong&gt;replaces&lt;/strong&gt; &lt;code&gt;net_sales_year_month&lt;/code&gt; with a generic &lt;code&gt;data&lt;/code&gt;, serving as the function parameter. Now &lt;em&gt;any&lt;/em&gt; dataframe can be used as a parameter for the &lt;code&gt;create_ymd_function&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note the BEFORE and AFTER sections below - they have the same output, but one is a more general function that can be used with other data frames.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Selecting columns to work with (net_sales)
net_sales_year_month &amp;lt;- retail_sales2 %&amp;gt;%
    select(`Net Sales`, Year, Month) %&amp;gt;%
    rename(net_sales = `Net Sales`)

# BEFORE
net_sales_year_month %&amp;gt;%
        mutate(
            Day = 1,
            month_year = paste(Year, Month, Day),
            month_year = month_year %&amp;gt;% ymd(),
            month = month(month_year)
        )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 36 x 6
##    net_sales  Year Month       Day month_year month
##        &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1     8284.  2017 January       1 2017-01-01     1
##  2     6388.  2017 February      1 2017-02-01     2
##  3     4589.  2017 March         1 2017-03-01     3
##  4     8533.  2017 April         1 2017-04-01     4
##  5     6237.  2017 May           1 2017-05-01     5
##  6     9370.  2017 June          1 2017-06-01     6
##  7     5959.  2017 July          1 2017-07-01     7
##  8     7740.  2017 August        1 2017-08-01     8
##  9     6732.  2017 September     1 2017-09-01     9
## 10     5327   2017 October       1 2017-10-01    10
## # â¦ with 26 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# AFTER

# Function takes in dataframe to add columns for further analysis
create_ymd_function &amp;lt;- function(data) {
    data %&amp;gt;%
        mutate(
            Day = 1,
            month_year = paste(Year, Month, Day),
            month_year = month_year %&amp;gt;% ymd(),
            month = month(month_year)
        )
}

create_ymd_function(net_sales_year_month)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 36 x 6
##    net_sales  Year Month       Day month_year month
##        &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;
##  1     8284.  2017 January       1 2017-01-01     1
##  2     6388.  2017 February      1 2017-02-01     2
##  3     4589.  2017 March         1 2017-03-01     3
##  4     8533.  2017 April         1 2017-04-01     4
##  5     6237.  2017 May           1 2017-05-01     5
##  6     9370.  2017 June          1 2017-06-01     6
##  7     5959.  2017 July          1 2017-07-01     7
##  8     7740.  2017 August        1 2017-08-01     8
##  9     6732.  2017 September     1 2017-09-01     9
## 10     5327   2017 October       1 2017-10-01    10
## # â¦ with 26 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;net_sales_year_month_2 &amp;lt;- create_ymd_function(net_sales_year_month)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;generalizing-functions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Generalizing Functions&lt;/h2&gt;
&lt;p&gt;Hereâs another example of moving from specific to &lt;em&gt;general&lt;/em&gt; functions.&lt;/p&gt;
&lt;p&gt;With the &lt;code&gt;create_line_chart&lt;/code&gt; function, iâm taking in a dataframe, piping into &lt;code&gt;ggplot&lt;/code&gt; and visualizing a simple line graph with &lt;code&gt;geom_line&lt;/code&gt;. Youâll note it is specific because it requires the dataframe to have a column named &lt;code&gt;net_sales&lt;/code&gt; in order to work.&lt;/p&gt;
&lt;p&gt;But what if I wanted to repeat this operation with &lt;code&gt;total_orders&lt;/code&gt; or &lt;code&gt;total_sales&lt;/code&gt; or some other metric?&lt;/p&gt;
&lt;p&gt;Right below, I create a more &lt;em&gt;general&lt;/em&gt; function, &lt;code&gt;create_line_chart_general&lt;/code&gt; that takes in &lt;em&gt;any&lt;/em&gt; dataset and two columns as the function parameter.&lt;/p&gt;
&lt;p&gt;This makes the function much more re-usable. However, it also introduces some &lt;code&gt;R&lt;/code&gt;-specific commands like &lt;code&gt;enquo()&lt;/code&gt; and &lt;code&gt;!!&lt;/code&gt; to &lt;em&gt;quote&lt;/em&gt; and &lt;em&gt;unquote&lt;/em&gt; parameters for use in the function. We are entering &lt;code&gt;lazy evaluation&lt;/code&gt; territory, which Iâll save for another post!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# BEFORE: 

# This function only works for net_sales
# It&amp;#39;s easy to just slip &amp;#39;data&amp;#39; as an argument
# But the aesthetic mapping is done only one a specific column
create_line_chart &amp;lt;- function(data){
    data %&amp;gt;%
    ggplot(aes(x = month_year, y = net_sales)) +
    geom_line()   
}

# AFTER: 

# This is a more generalizable function using enquo() and &amp;#39;!!&amp;#39;
# note columns as function parameters

create_line_chart_general &amp;lt;- function(dataset, col_name_1, col_name_2){
    col_name_1 &amp;lt;- enquo(col_name_1)
    col_name_2 &amp;lt;- enquo(col_name_2)
    dataset %&amp;gt;%
        ggplot(aes(x = !!(col_name_1), y = !!(col_name_2))) +
        geom_line()   
}

# Call the function with data and necessary parameters
create_line_chart_general(net_sales_year_month_2, month_year, net_sales)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-custom-function_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-generalized-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;More Generalized Function&lt;/h2&gt;
&lt;p&gt;This next function is slightly more complicated as it involves creating several more columns. But it can still be generalized using the tools discussed above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;create_bpc_columns_general &amp;lt;- function(dataset, col_name){
    col_name &amp;lt;- enquo(col_name)
    bpc_data &amp;lt;- dataset %&amp;gt;%
        mutate(
            avg_orders = mean(!!(col_name)),
            # calculate lagging difference
            moving_range = diff(as.zoo(!!(col_name)), na.pad=TRUE),
            # get absolute value
            moving_range = abs(moving_range),
            # change NA to 0
            moving_range = ifelse(row_number()==1, 0, moving_range),
            avg_moving_range = mean(moving_range),
            lnpl = avg_orders - (2.66*avg_moving_range),
            lower_25 = avg_orders - (1.33*avg_moving_range),
            upper_25 = avg_orders + (1.33*avg_moving_range),
            unpl = avg_orders + (2.66*avg_moving_range)
        )
    
    return(bpc_data)
}

create_bpc_columns_general(net_sales_year_month_2, net_sales)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 36 x 13
##    net_sales  Year Month   Day month_year month avg_orders moving_range
##        &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;
##  1     8284.  2017 Januâ¦     1 2017-01-01     1      9058.           0 
##  2     6388.  2017 Febrâ¦     1 2017-02-01     2      9058.        1896.
##  3     4589.  2017 March     1 2017-03-01     3      9058.        1798.
##  4     8533.  2017 April     1 2017-04-01     4      9058.        3944.
##  5     6237.  2017 May       1 2017-05-01     5      9058.        2295.
##  6     9370.  2017 June      1 2017-06-01     6      9058.        3132.
##  7     5959.  2017 July      1 2017-07-01     7      9058.        3410.
##  8     7740.  2017 Auguâ¦     1 2017-08-01     8      9058.        1781.
##  9     6732.  2017 Septâ¦     1 2017-09-01     9      9058.        1008.
## 10     5327   2017 Octoâ¦     1 2017-10-01    10      9058.        1405.
## # â¦ with 26 more rows, and 5 more variables: avg_moving_range &amp;lt;dbl&amp;gt;,
## #   lnpl &amp;lt;dbl&amp;gt;, lower_25 &amp;lt;dbl&amp;gt;, upper_25 &amp;lt;dbl&amp;gt;, unpl &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;net_sales_bpc_data &amp;lt;- create_bpc_columns_general(net_sales_year_month_2, net_sales)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;generalized-functions-for-visualization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Generalized Functions for Visualization&lt;/h2&gt;
&lt;p&gt;This was the trickiest to convert into a general function and Iâm still on the fence as to whether this is generalizable. In one sense, it &lt;em&gt;is&lt;/em&gt; generalizable as I tested this &lt;code&gt;create_bpc_visualization_general&lt;/code&gt; function on another column aside from &lt;code&gt;net_sales&lt;/code&gt;, but it did require that I &lt;em&gt;know&lt;/em&gt; that other columns in the dataset are: &lt;code&gt;avg_orders&lt;/code&gt;, &lt;code&gt;unpl&lt;/code&gt;, &lt;code&gt;lnpl&lt;/code&gt;, &lt;code&gt;upper_25&lt;/code&gt; and &lt;code&gt;lower_25&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I have more exploring to do around quoting and unquoting &lt;code&gt;enquo()&lt;/code&gt;, &lt;code&gt;quos()&lt;/code&gt; for various &lt;code&gt;ggplot&lt;/code&gt; geometries like &lt;code&gt;geom_hline&lt;/code&gt;. Will report back with another post once I get those details down.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;create_bpc_visualization_general &amp;lt;- function(dataset, col_x, col_y, col_avg, col_unpl, col_lnpl, col_upper_25, col_lower_25){
    col_x &amp;lt;- enquo(col_x) # month_year
    col_y &amp;lt;- enquo(col_y) # net_sales
    
    col_avg &amp;lt;- dataset$avg_orders
    col_unpl &amp;lt;- dataset$unpl
    col_lnpl &amp;lt;- dataset$lnpl
    col_upper_25 &amp;lt;- dataset$upper_25
    col_lower_25 &amp;lt;- dataset$lower_25
    
    dataset %&amp;gt;%
        ggplot(aes(x = !!(col_x), y = !!(col_y))) +
        geom_line() +
        geom_hline(yintercept = col_avg, color = &amp;#39;green&amp;#39;) +
        geom_hline(yintercept = col_unpl, color = &amp;#39;red&amp;#39;, linetype = &amp;#39;dashed&amp;#39;) +
        geom_hline(yintercept = col_lnpl, color = &amp;#39;red&amp;#39;, linetype = &amp;#39;dashed&amp;#39;) +
        geom_hline(yintercept = col_upper_25, color = &amp;#39;orange&amp;#39;) +
        geom_hline(yintercept = col_lower_25, color = &amp;#39;orange&amp;#39;) +
        
        # break x-axis into quarters
        scale_x_date(breaks = &amp;#39;3 month&amp;#39;) +
        # note: place before theme()
        theme_minimal() +
        theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
        labs(
            title = glue(&amp;#39;{names(dataset[,1])}: Business Process Chart&amp;#39;),
            subtitle = &amp;quot;2017 - 2019&amp;quot;,
            x = &amp;quot;&amp;quot;,
            y = glue(&amp;#39;{names(dataset[,1])}&amp;#39;),
            caption = &amp;quot;----&amp;quot;
        ) +
        annotate(&amp;quot;text&amp;quot;, x = as.Date(&amp;quot;2017-02-01&amp;quot;), y = col_unpl, color = &amp;#39;red&amp;#39;, label = &amp;quot;UNLP&amp;quot;) +
        annotate(&amp;quot;text&amp;quot;, x = as.Date(&amp;quot;2017-02-01&amp;quot;), y = col_lnpl, color = &amp;#39;red&amp;#39;, label = &amp;quot;LNLP&amp;quot;) +
        annotate(&amp;quot;text&amp;quot;, x = as.Date(&amp;quot;2017-02-01&amp;quot;), y = col_upper_25, color = &amp;#39;orange&amp;#39;, label = &amp;quot;Upper 25%&amp;quot;) +
        annotate(&amp;quot;text&amp;quot;, x = as.Date(&amp;quot;2017-02-01&amp;quot;), y = col_avg, color = &amp;#39;green&amp;#39;, label = &amp;quot;Avg = 97&amp;quot;)
    
}

create_bpc_visualization_general(net_sales_bpc_data, month_year, net_sales, avg_orders, unpl, lnpl, upper_25, lower_25)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-custom-function_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Itâs possible to do a fair amount of data analysis without using functions, but &lt;strong&gt;functions&lt;/strong&gt; help you avoid endless copying and pasting and make your code less error prone.&lt;/p&gt;
&lt;p&gt;There are many different types functions you could use. In this post, I share functions that take columns of data as arguments. These types of functions are well-suited for streamlining your data pre-processing and visualization tasks.&lt;/p&gt;
&lt;p&gt;Shout out to &lt;a href=&#34;https://twitter.com/brodriguesco&#34;&gt;Bruno Rodrigues&lt;/a&gt; for writing &lt;a href=&#34;https://b-rodrigues.github.io/modern_R/&#34;&gt;&lt;strong&gt;Modern R with the Tidyverse&lt;/strong&gt;&lt;/a&gt; which has helped me get my head around writing custom functions.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Data Wrangling Foundations</title>
      <link>/post/ds4b-data-wrangling/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/ds4b-data-wrangling/</guid>
      <description>


&lt;div id=&#34;data-wrangling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Wrangling&lt;/h2&gt;
&lt;p&gt;Iâve had experiencing using several of the functions in this portion of &lt;a href=&#34;https://university.business-science.io/p/ds4b-101-r-business-analysis-r/&#34;&gt;#DS4B 101&lt;/a&gt;, like &lt;code&gt;select()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;distinct()&lt;/code&gt;, &lt;code&gt;group_by()&lt;/code&gt;, &lt;code&gt;summarize()&lt;/code&gt; and so on, but this course is making me realize iâve only skimmed the surface of &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Recommended for anyone learning R who wants to level-up.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;select-arrange&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Select &amp;amp; Arrange&lt;/h2&gt;
&lt;p&gt;Iâve used the &lt;code&gt;select&lt;/code&gt; function before, but I havenât &lt;strong&gt;used&lt;/strong&gt; it, really.&lt;/p&gt;
&lt;p&gt;I had previously selected by column name, never by numeric vector; and I had never used select_helpers (&lt;code&gt;starts_with&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;matches&lt;/code&gt;, &lt;code&gt;num_range&lt;/code&gt;). I had never re-arranged columns using &lt;code&gt;select()&lt;/code&gt;. &lt;code&gt;Select_if()&lt;/code&gt; also comes in handy as well. Knowing data types allow for efficient selection (integer vs double).&lt;/p&gt;
&lt;p&gt;Iâve used arrange() and desc(), so I donât go into too much detail here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ââ Attaching packages ââââââââââââââââââââââââââââââââââââââââââââââââ tidyverse 1.3.0 ââ&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## â ggplot2 3.3.1     â purrr   0.3.3
## â tibble  3.0.1     â dplyr   0.8.5
## â tidyr   1.0.0     â stringr 1.4.0
## â readr   1.3.1     â forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ââ Conflicts âââââââââââââââââââââââââââââââââââââââââââââââââââ tidyverse_conflicts() ââ
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# select first three columns using numeric vector
USArrests %&amp;gt;%
    select(1:3)

# re-arrange columns using select; place UrbanPop first
USArrests %&amp;gt;%
    select(UrbanPop, everything())

# select if integer 
USArrests %&amp;gt;%
    select_if(is.integer)

USArrests %&amp;gt;%
    select_if(~ !is.double(.))

# select if double
USArrests %&amp;gt;%
    select_if(is.double)

USArrests %&amp;gt;%
    select_if(~ !is.integer(.))

# swithing to IRIS dataframe
# select helpers: starts_with, contains
iris %&amp;gt;%
    select(starts_with(&amp;quot;petal&amp;quot;))

iris %&amp;gt;%
    select(contains(&amp;quot;length&amp;quot;)) %&amp;gt;% 
    head()

# using pull() instead of select() to pull out contents of a column
iris %&amp;gt;%
    pull(Sepal.Width) %&amp;gt;%
    head()

iris %&amp;gt;% 
    select_if(is.factor) %&amp;gt;%
    head()

# arrange Species in descending order by Petal.Length
iris %&amp;gt;%
    select(Petal.Length, Species) %&amp;gt;%
    arrange(desc(Petal.Length))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;slice-highlighting-a-distinction-between-base-and-tidyverse&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Slice: Highlighting a Distinction between Base and Tidyverse&lt;/h2&gt;
&lt;p&gt;Using &lt;code&gt;slice()&lt;/code&gt; to grab portions of rows is another function I had not used prior. I might have used base R to grab specific rows. But looking back all my Base R operations were &lt;strong&gt;one-offs&lt;/strong&gt;. Below is an example, I may use Base-R to grab the first five rows of a dataframe. If I wanted to sort by a particular column, then grab the first give rows, it turns into two operations. First sorting by column, decreasing and assigning to âxâ, then grabing first five rows of âxâ.&lt;/p&gt;
&lt;p&gt;With dplyr, particularly patterns taught in the class, you can more seamlessly arrange, in descending order by a particular column (Solar.R), then slice the first five rows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# tidyverse to grab first five rows with slice(), but this allows pre-arranging it first. 
airquality %&amp;gt;%
    arrange(desc(Solar.R)) %&amp;gt;%
    slice(1:5)

# base R to grab first five rows
airquality[1:5,]


# base R to first sort by Solar.R, then assign to variable &amp;#39;x&amp;#39;, then grab first five values
x &amp;lt;- sort(airquality$Solar.R, decreasing = TRUE)
x[1:5]

# fastest way to grab Solar.R
sort(airquality$Solar.R, decreasing = TRUE)[1:5]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;spread-and-gather&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Spread and Gather&lt;/h2&gt;
&lt;p&gt;Here demonstrating &lt;code&gt;gather()&lt;/code&gt; and &lt;code&gt;spread()&lt;/code&gt; using the built-in &lt;code&gt;iris&lt;/code&gt; dataset. The&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# gather (before spread)
iris %&amp;gt;% 
    # create unique ID for each row
    mutate(ID=row_number(Species)) %&amp;gt;%
    # put ID in first column
    select(ID, everything()) %&amp;gt;%
    # use values from columns 2-5 as value
    gather(key = Measure_Type, value = Values,2:5) %&amp;gt;%
    # can spread by either Measure_Type or Species
    spread(key = Species, value = Values)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;filter-and-mutate-with-nested-pipes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Filter and Mutate with nested pipes&lt;/h2&gt;
&lt;p&gt;Using both &lt;code&gt;airquality&lt;/code&gt; and &lt;code&gt;USArrests&lt;/code&gt; to demonstrate various data wrangling operations involving filter and mutate with nested pipes. I canât believe Iâve only filtered one column at a time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filter airquality for beginning and end of the month
airquality %&amp;gt;%
    filter(Day &amp;lt; 5 | Day &amp;gt; 25)

airquality %&amp;gt;%
    filter(Temp &amp;lt; 71 &amp;amp; Temp &amp;gt; 64)

# Filter states that start with a certain alphabet
USArrests

# convert row name to column
USArrest_rownames &amp;lt;- tibble::rownames_to_column(USArrests, &amp;quot;States&amp;quot;)


# Descriptive statistics of Violence_Type by all States that start with &amp;quot;New&amp;quot;
USArrest_rownames %&amp;gt;%
    select(States, UrbanPop, everything()) %&amp;gt;%
    filter(States %&amp;gt;% 
               str_detect(&amp;quot;New&amp;quot;)) %&amp;gt;%
    # good to define which columns will be gather() in new column
    gather(`Murder`, `Assault`, `Rape`, key = &amp;quot;Violence_Type&amp;quot;, value = &amp;quot;cases&amp;quot; ) %&amp;gt;%
    group_by(Violence_Type) %&amp;gt;%
    summarize(
        avg = mean(cases),
        min = min(cases),
        max = max(cases)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    mutate(avg = round(avg,1))


# Filter by states starting with &amp;quot;A&amp;quot; and murder higher than 10
USArrest_rownames %&amp;gt;%
    filter(Murder &amp;gt; 10, 
           States %&amp;gt;% str_detect(&amp;quot;A&amp;quot;))

# filter for all states beginning with &amp;quot;New&amp;quot;
USArrest_rownames %&amp;gt;%
    filter(States %&amp;gt;% str_detect(&amp;quot;New&amp;quot;)) %&amp;gt;%
    arrange(desc(Assault))

USArrest_rownames %&amp;gt;%
    filter(Murder &amp;gt; 5, 
           States %&amp;gt;% str_detect(&amp;quot;M&amp;quot;)) %&amp;gt;%
    arrange(desc(Murder))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;handling-missing-values-replace-na&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Handling Missing Values: Replace NA&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;summarize_all()&lt;/code&gt; and &lt;code&gt;replace_na()&lt;/code&gt; are a joy to use for handling missing values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Quickly get number of &amp;quot;missing values&amp;quot; for all columns
airquality %&amp;gt;%
    summarize_all(~sum(is.na(.)))

# Get proportion of missing values for each column
airquality %&amp;gt;%
    summarize_all(~ sum(is.na(.)) / length(.))

# Quickly replace missing values in columns Ozone and Solar.R with &amp;#39;0&amp;#39;
airquality %&amp;gt;%
    replace_na(list(Ozone = 0, Solar.R = 0))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;chaining-multiple-pipes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chaining Multiple Pipes&lt;/h2&gt;
&lt;p&gt;The coding patterns covered in this course is my biggest take-away thus far.&lt;/p&gt;
&lt;p&gt;Previously, I had not used &lt;em&gt;longer&lt;/em&gt; patterns of piping to explore data. Much of my code involved maybe 2-3 pipes, saving a new dataframe, then continuing to explore. Here iâm piping seven operations without creating a new dataframe and it allows for more efficient exploration, without having to save extra data frames.&lt;/p&gt;
&lt;p&gt;Making me re-think my approach to data wrangling.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Chaining multiple pipes to more efficiently explore data
iris %&amp;gt;%
    group_by(Species) %&amp;gt;%
    summarize(
        count = n(),
        mean = mean(Petal.Length),
        median = median(Petal.Length),
        sd = sd(Petal.Length),
        min = min(Petal.Length),
        max = max(Petal.Length)
    ) %&amp;gt;%
    ungroup() %&amp;gt;%
    mutate(Range = max - min) %&amp;gt;%
    rename(
        `Standard Deviation` = sd,
        `Average` = mean,
        `Mininum` = min, 
        `Maximum` = max
    ) %&amp;gt;%
    arrange(desc(Average))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Converting Universal Transverse Mercator (UTM) to lattitude/longitude data</title>
      <link>/post/r-markdown-utm/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/r-markdown-utm/</guid>
      <description>


&lt;div id=&#34;packages-and-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages and Libraries&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(maps)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ââ Attaching packages ââââââââââââââââââââââââââââââââââââââââââââââââââââââ tidyverse 1.3.0 ââ&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## â ggplot2 3.3.1     â purrr   0.3.3
## â tibble  3.0.1     â dplyr   0.8.5
## â tidyr   1.0.0     â stringr 1.4.0
## â readr   1.3.1     â forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ââ Conflicts âââââââââââââââââââââââââââââââââââââââââââââââââââââââââ tidyverse_conflicts() ââ
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()
## x purrr::map()    masks maps::map()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(sp)
library(rmarkdown)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;world-and-thai-maps&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;World and Thai Maps&lt;/h2&gt;
&lt;p&gt;First, weâll use &lt;code&gt;map_data&lt;/code&gt; function from &lt;code&gt;ggplot2&lt;/code&gt; to turn any map from the &lt;code&gt;maps&lt;/code&gt; package into a data frame. This provides longitude and lattitude data. Then, weâll filter for Thailand to get Thai longtitude and lattitude data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world.map &amp;lt;- map_data(&amp;quot;world&amp;quot;)
head(world.map)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        long      lat group order region subregion
## 1 -69.89912 12.45200     1     1  Aruba      &amp;lt;NA&amp;gt;
## 2 -69.89571 12.42300     1     2  Aruba      &amp;lt;NA&amp;gt;
## 3 -69.94219 12.43853     1     3  Aruba      &amp;lt;NA&amp;gt;
## 4 -70.00415 12.50049     1     4  Aruba      &amp;lt;NA&amp;gt;
## 5 -70.06612 12.54697     1     5  Aruba      &amp;lt;NA&amp;gt;
## 6 -70.05088 12.59707     1     6  Aruba      &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;THAI.map &amp;lt;- world.map %&amp;gt;% filter(region == &amp;quot;Thailand&amp;quot;)
head(THAI.map)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       long      lat group order   region   subregion
## 1 99.66309 6.521924  1404 87912 Thailand Ko Tarutao 
## 2 99.64404 6.516113  1404 87913 Thailand Ko Tarutao 
## 3 99.60664 6.596827  1404 87914 Thailand Ko Tarutao 
## 4 99.65401 6.714111  1404 87915 Thailand Ko Tarutao 
## 5 99.70136 6.570557  1404 87916 Thailand Ko Tarutao 
## 6 99.66309 6.521924  1404 87917 Thailand Ko Tarutao&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;longitude-and-lattitude-value-ranges&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Longitude and Lattitude Value Ranges&lt;/h2&gt;
&lt;p&gt;Before converting UTM to longitude/lattitude data, we should know the range of both Longitudes and Lattitudes for Thailand.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(THAI.map$long)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   97.37   99.08  100.26  100.71  102.27  105.64&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(THAI.map$lat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   5.637   9.084  13.213  13.249  17.820  20.424&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;jobpost-data-frame&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Jobpost Data Frame&lt;/h2&gt;
&lt;p&gt;Our objective is to visualize utm_x and utm_y in the &lt;code&gt;jobpost&lt;/code&gt; data frame by turning them into lattitude and longitude data first. The &lt;code&gt;jobpost&lt;/code&gt; data frame is retrieved from PostgreSQL.&lt;/p&gt;
&lt;p&gt;Preparation includes writing it to CSV before loading into Rmarkdown.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jobpost &amp;lt;- read.csv(&amp;quot;jobpost.csv&amp;quot;)
glimpse(jobpost)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 50
## Columns: 25
## $ X                 &amp;lt;int&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, â¦
## $ jobpost_id        &amp;lt;int&amp;gt; 54, 66, 33, 34, 35, 36, 28, 32, 30, 55, 67, 68, 37,â¦
## $ job_name          &amp;lt;fct&amp;gt; &amp;quot;Facebook Marketing&amp;quot;, &amp;quot;à¹à¸­à¸à¸¡à¸´à¸&amp;quot;, &amp;quot;Accountant&amp;quot;, &amp;quot;à¹à¸à¸à¹â¦
## $ job_qty           &amp;lt;int&amp;gt; 3, 1, 1, 2, 2, 5, 3, 1, 5, 1, 22, 10, 1, 1, 2, 2, 1â¦
## $ age_min           &amp;lt;int&amp;gt; 22, 25, 29, 20, 20, 19, 28, 28, 20, 25, 30, 21, 18,â¦
## $ age_max           &amp;lt;int&amp;gt; 26, 32, 35, 35, 35, 40, 120, 40, 40, 45, 45, 30, 50â¦
## $ study_field       &amp;lt;fct&amp;gt; &amp;quot;-&amp;quot;, &amp;quot;à¹à¸à¸à¸±à¹à¸&amp;quot;, &amp;quot;-&amp;quot;, &amp;quot;-&amp;quot;, &amp;quot;-&amp;quot;, &amp;quot;-&amp;quot;, &amp;quot;-&amp;quot;, &amp;quot;à¸à¸±à¸à¸à¸²à¸£à¸à¸±à¸à¸â¦
## $ job_qualification &amp;lt;fct&amp;gt; &amp;quot;à¸­à¹à¸²à¸ à¹à¸à¸µà¸¢à¸ à¸ à¸²à¸©à¸²à¸­à¸±à¸à¸à¸¤à¸© à¹à¸à¹à¸à¸µ&amp;quot;, &amp;quot;à¸à¸­à¸à¸à¸³à¸à¸²à¸¡ à¸ à¸²à¸©à¸²à¸­à¸±à¸à¸à¸¤à¸©â¦
## $ min_salary        &amp;lt;int&amp;gt; 30000, 12000, 20000, 13000, 10000, 15000, 15000, 12â¦
## $ job_description   &amp;lt;fct&amp;gt; &amp;quot;à¸à¸³à¸à¸²à¸£à¸à¸¥à¸²à¸à¸à¸²à¸à¸à¹à¸­à¸à¸à¸²à¸ facebook&amp;quot;, &amp;quot;à¹à¸­à¸à¸¡à¸´à¸à¸à¸¹à¹à¸¥ à¹à¸à¸ à¹à¸ªà¸·â¦
## $ manychat_id       &amp;lt;dbl&amp;gt; 3.961592e+15, 2.984969e+15, 2.941175e+15, 3.416291eâ¦
## $ job_sex           &amp;lt;int&amp;gt; 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 3, â¦
## $ study_level       &amp;lt;int&amp;gt; 5, 5, 5, 0, 2, 2, 3, 4, 4, 5, 5, 4, 0, 2, 2, 5, 5, â¦
## $ work_exp          &amp;lt;int&amp;gt; 1, 0, 3, 1, 0, 0, 0, 3, 0, 3, 3, 0, 0, 1, 1, 3, 6, â¦
## $ created           &amp;lt;fct&amp;gt; 2020-06-07 09:00:36, 2020-06-14 23:12:35, 2020-05-2â¦
## $ updated           &amp;lt;fct&amp;gt; 2020-06-08 09:05:23, 2020-06-14 23:12:35, 2020-05-2â¦
## $ confirmed         &amp;lt;fct&amp;gt; 2020-06-07 09:00:36, 2020-06-14 23:12:35, 2020-05-2â¦
## $ batch             &amp;lt;lgl&amp;gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAâ¦
## $ location          &amp;lt;fct&amp;gt; à¸à¸²à¸à¸à¸², à¸£à¸²à¸¡à¸­à¸´à¸à¸à¸£à¸² 65, à¸à¸£à¸°à¸£à¸²à¸¡à¹à¸à¹à¸² à¸à¸­à¸¢ 60, à¸«à¹à¸²à¸ à¸£à¸´à¹à¸§à¸­à¸£â¦
## $ utm_x             &amp;lt;dbl&amp;gt; 674486.5, 678167.2, 676504.5, 661251.7, 714943.7, 6â¦
## $ utm_y             &amp;lt;dbl&amp;gt; 1511131, 1532008, 1519745, 1515611, 1477934, 152128â¦
## $ utm_zone_number   &amp;lt;int&amp;gt; 47, 47, 47, 47, 47, 47, 48, 47, 47, 47, 35, 48, 47,â¦
## $ utm_zone_letter   &amp;lt;fct&amp;gt; P, P, P, P, P, P, Q, P, P, P, L, P, P, P, P, P, P, â¦
## $ job_type          &amp;lt;int&amp;gt; NA, NA, 0, 0, 0, 0, 0, 0, 0, NA, NA, NA, 0, 0, 0, 0â¦
## $ online            &amp;lt;lgl&amp;gt; NA, NA, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, Fâ¦&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;subset-data-frame-called-utm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Subset Data Frame called UTM&lt;/h2&gt;
&lt;p&gt;Weâll select only &lt;code&gt;utm_x&lt;/code&gt; and &lt;code&gt;utm_y&lt;/code&gt; columns from &lt;code&gt;jobpost&lt;/code&gt; because weâre interested in these two columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;utm &amp;lt;- data.frame(jobpost$utm_x, jobpost$utm_y)
str(utm)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    50 obs. of  2 variables:
##  $ jobpost.utm_x: num  674486 678167 676504 661252 714944 ...
##  $ jobpost.utm_y: num  1511131 1532008 1519745 1515611 1477934 ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;handle-missing-values-and-outliers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Handle Missing Values and Outliers&lt;/h2&gt;
&lt;p&gt;Row 50 in &lt;code&gt;jobpost&lt;/code&gt; and also &lt;code&gt;utm&lt;/code&gt; is missing so weâll delete that. Then weâll also delete row 11 because itâs location is Zambia, Africa and its longitude and lattitude numbers are very different from Thailand - which will &lt;em&gt;distort&lt;/em&gt; the map.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;utm &amp;lt;- utm[-50, ]
utm &amp;lt;- utm[-11, ]
jobpost &amp;lt;- jobpost[-50, ]
jobpost &amp;lt;- jobpost[-11, ]
str(utm)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    48 obs. of  2 variables:
##  $ jobpost.utm_x: num  674486 678167 676504 661252 714944 ...
##  $ jobpost.utm_y: num  1511131 1532008 1519745 1515611 1477934 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(jobpost)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    48 obs. of  25 variables:
##  $ X                : int  1 2 3 4 5 6 7 8 9 10 ...
##  $ jobpost_id       : int  54 66 33 34 35 36 28 32 30 55 ...
##  $ job_name         : Factor w/ 48 levels &amp;quot;.Net Developer&amp;quot;,..: 6 48 2 21 19 39 11 35 4 42 ...
##  $ job_qty          : int  3 1 1 2 2 5 3 1 5 1 ...
##  $ age_min          : int  22 25 29 20 20 19 28 28 20 25 ...
##  $ age_max          : int  26 32 35 35 35 40 120 40 40 45 ...
##  $ study_field      : Factor w/ 19 levels &amp;quot;-&amp;quot;,&amp;quot;Food science&amp;quot;,..: 1 12 1 1 1 1 1 6 1 5 ...
##  $ job_qualification: Factor w/ 41 levels &amp;quot;-&amp;quot;,&amp;quot;- à¸¡à¸µà¹à¸à¸à¸±à¸à¸à¸µà¹à¸£à¸à¸¢à¸à¸à¹\n- à¸à¹à¸²à¸à¸à¸²à¸£à¹à¸à¸à¸à¹à¸à¸«à¸²à¸£&amp;quot;,..: 41 16 9 38 37 32 33 30 15 23 ...
##  $ min_salary       : int  30000 12000 20000 13000 10000 15000 15000 12000 11500 25000 ...
##  $ job_description  : Factor w/ 50 levels &amp;quot;- Develops, modifies application software according to specifications and requirements.\n- Develops application&amp;quot;| __truncated__,..: 30 50 27 4 16 14 15 23 7 47 ...
##  $ manychat_id      : num  3.96e+15 2.98e+15 2.94e+15 3.42e+15 3.00e+15 ...
##  $ job_sex          : int  3 3 2 2 3 3 3 3 3 3 ...
##  $ study_level      : int  5 5 5 0 2 2 3 4 4 5 ...
##  $ work_exp         : int  1 0 3 1 0 0 0 3 0 3 ...
##  $ created          : Factor w/ 26 levels &amp;quot;2020-05-29 14:21:22&amp;quot;,..: 12 24 1 1 1 1 1 1 1 13 ...
##  $ updated          : Factor w/ 33 levels &amp;quot;2020-05-29 14:21:22&amp;quot;,..: 19 30 1 7 1 8 1 1 6 22 ...
##  $ confirmed        : Factor w/ 26 levels &amp;quot;2020-05-29 14:21:22&amp;quot;,..: 12 24 1 1 1 1 1 1 1 13 ...
##  $ batch            : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
##  $ location         : Factor w/ 50 levels &amp;quot;112/3 à¸«à¸¡à¸¹à¹ 7 à¸.à¸à¸²à¸à¹à¸à¸¥à¸ à¸­.à¸à¸²à¸à¸à¸¥à¸µ à¸.à¸ªà¸¡à¸¸à¸à¸£à¸à¸£à¸²à¸à¸²à¸£ 10540&amp;quot;,..: 25 35 29 47 30 9 38 11 49 39 ...
##  $ utm_x            : num  674486 678167 676504 661252 714944 ...
##  $ utm_y            : num  1511131 1532008 1519745 1515611 1477934 ...
##  $ utm_zone_number  : int  47 47 47 47 47 47 48 47 47 47 ...
##  $ utm_zone_letter  : Factor w/ 4 levels &amp;quot;L&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;P&amp;quot;,&amp;quot;Q&amp;quot;: 3 3 3 3 3 3 4 3 3 3 ...
##  $ job_type         : int  NA NA 0 0 0 0 0 0 0 NA ...
##  $ online           : logi  NA NA FALSE FALSE FALSE FALSE ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conversion-of-utm-into-latlong&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conversion of UTM into Lat/Long&lt;/h2&gt;
&lt;p&gt;After some research, we find out that Thailandâs UTM zone is 47N. The stack overflow source I used to find the conversion code is &lt;a href=&#34;https://stackoverflow.com/questions/30018098/how-to-convert-utm-coordinates-to-lat-and-long-in-r/30018607&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Weâll create two SpatialPoints object classes. Then transform them into a data frame containing lat and long data.&lt;/p&gt;
&lt;p&gt;Remember to load &lt;code&gt;sp&lt;/code&gt; library for this operation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sputm &amp;lt;- SpatialPoints(utm, proj4string = CRS(&amp;quot;+proj=utm +zone=47N +datum=WGS84&amp;quot;))
spgeo &amp;lt;- spTransform(sputm, CRS(&amp;quot;+proj=longlat +datum=WGS84&amp;quot;))

thai.map2 &amp;lt;- data.frame(Location = jobpost$location, lat = spgeo$jobpost.utm_y, 
    long = spgeo$jobpost.utm_x)

head(thai.map2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                      Location      lat     long
## 1                                       à¸à¸²à¸à¸à¸² 13.66385 100.6132
## 2                                 à¸£à¸²à¸¡à¸­à¸´à¸à¸à¸£à¸² 65 13.85233 100.6486
## 3                            à¸à¸£à¸°à¸£à¸²à¸¡à¹à¸à¹à¸² à¸à¸­à¸¢ 60 13.74159 100.6324
## 4 à¸«à¹à¸²à¸ à¸£à¸´à¹à¸§à¸­à¸£à¹à¹à¸à¸à¹ à¸à¸¥à¸²à¸à¹à¸² à¹à¸à¸£à¸´à¸à¸à¸à¸£ à¸à¸±à¹à¸ 1 à¹à¸à¹ à¸à¸±à¸à¹à¸à¹à¸¥à¸·à¹à¸­à¸ 13.70512 100.4912
## 5                                    à¹à¸¡à¸·à¸­à¸à¸à¸¥à¸à¸¸à¸£à¸µ 13.36114 100.9847
## 6                                      à¸à¸£à¸¸à¸à¹à¸à¸ 13.75633 100.5018&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize-with-ggplot2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualize with GGPLOT2&lt;/h2&gt;
&lt;p&gt;Here weâll visualize the &lt;code&gt;THAI.map&lt;/code&gt; we created previously and overlay the new Lat/Long data points (from UTM).&lt;/p&gt;
&lt;p&gt;We can see a concentration of &lt;code&gt;utm&lt;/code&gt; data points from &lt;code&gt;jobpost&lt;/code&gt; were made in Bangkok and the greater Bangkok areas with some jobs also posted outside Bangkok.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;THAI.map %&amp;gt;% ggplot() + geom_map(map = THAI.map, aes(x = long, 
    y = lat, map_id = region), fill = &amp;quot;white&amp;quot;, color = &amp;quot;black&amp;quot;) + 
    geom_point(data = thai.map2, aes(x = long, y = lat, color = &amp;quot;red&amp;quot;, 
        alpha = 0.9))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: x, y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-25-r-markdown-utm_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Data Visualization Competition 2020 - Wharton People Analytics Conf</title>
      <link>/slides/wpa/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/slides/wpa/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_1.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_3.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_4.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_5.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_6.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_8.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_13.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_15.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_17.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_19.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_20.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_21.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_22.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_23.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_25.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_28.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_30.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_34.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_36.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_37.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_38.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_39.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_40.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_41.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_43.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_46.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_48.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_50.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_51.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_53.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_54.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_55.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_56.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_58.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_59.jpeg&#34;
  &gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;./wpa_slides/wpa_final_slides_64.jpeg&#34;
  &gt;

&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Wharton People Analytics Data Visualization Competition 2020</title>
      <link>/project/wharton-people-analytics/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/project/wharton-people-analytics/</guid>
      <description>&lt;p&gt;This Data Visualization competition was hosted by the Wharton People Analytics conference. They partnered with Doctors Without Borders, a medical humanitarian organization that delivers emergency aid to people affected by conflict, epidemics and natural disasters. Our task was to analyze data dating back to 2 decades on their global workforce comprising over 45,000 people to understand the career paths of Medical Coordinators (a top-level position within the organization).&lt;/p&gt;
&lt;p&gt;Very excited to have won 2nd place in this competition! See details 
&lt;a href=&#34;https://wpa.wharton.upenn.edu/2020-conference-competition-winners/#datavisualizationcompetitionwinner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$...$&lt;/code&gt; or &lt;code&gt;$$...$$&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right |^2}$$&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$\nabla F(\mathbf{x}_{n})$&lt;/code&gt; renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\\\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\&lt;br&gt;
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$&lt;/p&gt;
&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;
&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;class diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;state diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;
&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;
&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;asides&#34;&gt;Asides&lt;/h3&gt;
&lt;p&gt;Academic supports a 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode for asides&lt;/a&gt;, also referred to as &lt;em&gt;notices&lt;/em&gt;, &lt;em&gt;hints&lt;/em&gt;, or &lt;em&gt;alerts&lt;/em&gt;. By wrapping a paragraph in &lt;code&gt;{{% alert note %}} ... {{% /alert %}}&lt;/code&gt;, it will render as an aside.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% alert note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;icons&#34;&gt;Icons&lt;/h3&gt;
&lt;p&gt;Academic enables you to use a wide range of 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons from &lt;em&gt;Font Awesome&lt;/em&gt; and &lt;em&gt;Academicons&lt;/em&gt;&lt;/a&gt; in addition to 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;emojis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples using the &lt;code&gt;icon&lt;/code&gt; shortcode to render icons:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal  
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python  
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-terminal  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Terminal&lt;br&gt;

  &lt;i class=&#34;fab fa-python  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Python&lt;br&gt;

  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; R&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it ð&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/post/jupyter/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_1_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-python-and-jupyterlab&#34;&gt;Install Python and JupyterLab&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and JupyterLab.&lt;/p&gt;
&lt;p&gt;Alternatively, install JupyterLab with &lt;code&gt;pip3 install jupyterlab&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;
&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY-WEBSITE-FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;SHORT-POST-TITLE&amp;gt;&lt;/code&gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
jupyter lab index.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;jupyter&lt;/code&gt; command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.&lt;/p&gt;
&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;
&lt;p&gt;The first cell of your Jupter notebook will contain your post metadata (
&lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;front matter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In Jupter, choose &lt;em&gt;Markdown&lt;/em&gt; as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: My post&#39;s title
date: 2019-09-01

# Put any other Academic metadata here...
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit the metadata of your post, using the 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; as a guide to the available options.&lt;/p&gt;
&lt;p&gt;To set a 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;
&lt;p&gt;For other tips, such as using math, see the guide on 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;This post was created with Jupyter. The orginal files can be found at &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-academic&#34;&gt;Create slides in Markdown with Academic&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; | 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://spectrum.chat/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Terms</title>
      <link>/terms/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>/terms/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website builder for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/post/getting-started/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em&gt;widgets&lt;/em&gt;, &lt;em&gt;themes&lt;/em&gt;, and &lt;em&gt;language packs&lt;/em&gt; included!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or 
&lt;a href=&#34;https://sourcethemes.com/academic/#expo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ð 
&lt;a href=&#34;#install&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View the &lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¬ 
&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Ask a question&lt;/strong&gt; on the forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¥ 
&lt;a href=&#34;https://spectrum.chat/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¦ Twitter: 
&lt;a href=&#34;https://twitter.com/source_themes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@source_themes&lt;/a&gt; 
&lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; 
&lt;a href=&#34;https://twitter.com/search?q=%23MadeWithAcademic&amp;amp;src=typd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithAcademic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¡ 
&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;â¬ï¸ &lt;strong&gt;Updating?&lt;/strong&gt; View the 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Guide&lt;/a&gt; and 
&lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;â¤ï¸ &lt;strong&gt;Support development&lt;/strong&gt; of Academic:
&lt;ul&gt;
&lt;li&gt;âï¸ 
&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Donate a coffee&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ðµ 
&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Become a backer on &lt;strong&gt;Patreon&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¼ï¸ 
&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Decorate your laptop or journal with an Academic &lt;strong&gt;sticker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð 
&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wear the &lt;strong&gt;T-shirt&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð©âð» 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/contribute/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Contribute&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;















&lt;figure id=&#34;figure-academic-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; data-caption=&#34;Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34;&gt;


  &lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable 
&lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and 
&lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - 
&lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, 
&lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 15+ language packs including English, ä¸­æ, and PortuguÃªs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Academic comes with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can  choose their preferred mode - click the sun/moon icon in the top right of the 
&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/customization/#custom-theme&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;customizable&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;
&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;
&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-web-browser&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;one-click install using your web browser (recommended)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;install on your computer using &lt;strong&gt;Git&lt;/strong&gt; with the Command Prompt/Terminal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;install on your computer by downloading the &lt;strong&gt;ZIP files&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;install on your computer with &lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;personalize and deploy your new site&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View the Update Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on 
&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt; to help keep track of 
&lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;updates&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present 
&lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the 
&lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>/publication/conference-paper/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>/publication/conference-paper/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
