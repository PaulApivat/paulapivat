blogdown::new_site(theme = "gcushen/hugo-academic", theme_example = TRUE)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(collapse = TRUE)
summary(cars)
fit <- lm(dist ~ speed, data = cars)
fit
getwd()
blogdown::serve_site()
getwd()
setwd("/Users/paulapivat/Desktop/RData")
getwd()
load(file = 'ddc_api.RData')
library(geofacet)
library(tidyverse)
library(ggrepel)
library(reshape2)
View(mygrid3_cases)
ggplot(data = mygrid3_cases, mapping = aes(x = color, y = sum_cases)) + geom_boxplot()
mygrid3_cases %>% filter(color != bkk) %>% ggplot(aes(x=color, y=sum_cases)) + geom_boxplot()
mygrid3_cases %>% filter(color != 'bkk') %>% ggplot(aes(x=color, y=sum_cases)) + geom_boxplot()
mygrid3_cases %>% filter(color != 'bkk' & color != 'q4') %>% ggplot(aes(x=color, y=sum_cases)) + geom_boxplot()
ggplot(data = mygrid3_cases, mapping = aes(x = color, y = sum_cases)) + geom_boxplot()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(color, sum_cases), y = sum_cases)) + geom_boxplot()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(color, sum_cases), y = sum_cases)) + geom_boxplot() + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(color, sum_cases), y = sum_cases)) + geom_violin() + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(color, sum_cases), y = sum_cases)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(color, sum_cases), y = sum_cases, fill = name)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(color, sum_cases), y = sum_cases, fill = name)) + geom_bar(stat = 'identity') + coord_flip() + theme(legend.position = 'none')
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_set(theme_light())
theme_set(theme_light(base_size = 15, base_family = "Poppins"))
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip()
extrafont::loadfonts(device = "win")
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_point() + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_point() + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_point() + geom_jitter() + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_point(position = 'jittered') + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_point(position = 'jitter') + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_boxplot() + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_line(size = 2) + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_point(size = 2) + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_point(size = 5, alpha = 0.15) + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, color = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic()
ggplot(data = mygrid3_cases, mapping = aes(x = reorder(name, sum_cases), y = sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic()
getwd()
setwd("/Users/paulapivat/Desktop/RData")
load(file = 'ddc_api.RData')
library(geofacet)
library(tidyverse)
library(reshape2)
View(mygrid3_cases)
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none') + labs(x = 'Cases', y = 'Provinces')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none') + labs(x = 'Provinces', y = 'Cases')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none') + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none', axix.text.x = element_text(family = 'Roboto Mono')) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none', axis.text.x = element_text(family = 'Roboto Mono')) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none', axis.text.x = element_text(family = 'Krub')) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none') + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
g <- ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme_classic() + theme(legend.position = 'none') + labs(x = NULL, y = 'Cases')
g
g <- ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + geom_bar(stat = 'identity') + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
g
ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
g <- ggplot(data = mygrid3_cases, mapping = aes(x=reorder(name, sum_cases), y=sum_cases, fill = color)) + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
g + geom_point(size = 3, alpha = 0.5)
g + geom_point(size = 3, alpha = 0.5 color = color)
g + geom_point(size = 3, alpha = 0.5, color = color)
g + geom_point(size = 3, alpha = 0.5, color = mygrid3_cases$color)
g
g + geom_boxplot(color = "gray60", outlier.alpha = 0) + geom_point(size = 3, alpha = 0.15)
g + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g + geom_bar(stat = 'identity')
g + geom_bar(stat = 'identity') + geom_point(size = 3, alpha = 0.15)
g + geom_bar(stat = 'identity') + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
set.seed(123)
g + geom_bar(stat = 'identity') + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g + geom_bar(stat = 'identity')
g + geom_bar(stat = 'identity') + geom_boxplot()
save.image(file = 'ddc_api.RData')
g + geom_bar(stat = 'identity')
View(thai_longlat_id)
View(thai_province_id)
View(mygrid3)
View(mygrid)
thai_province_id %>%
select(Region_Province, Region) -> region_clusters
View(region_clusters)
mygrid3_cases_alt <- mygrid3_cases
View(mygrid3_cases_alt)
colnames(region_clusters)[1]
colnames(region_clusters)[1] <- 'ProvinceEn'
mygrid3_cases_alt <- mygrid3_cases_alt %>%
inner_join(region_clusters, by = "ProvinceEn")
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, fill=color)) + geom_boxplot() + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=Region, y=sum_cases, fill=color)) + geom_boxplot() + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, fill=color)) + geom_point() + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, fill=color)) + geom_point(position = 'jitter') + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, color=color)) + geom_point(position = 'jitter') + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, color=color)) + geom_point(position = 'jitter') + coord_flip() + theme(panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, color=Region)) + geom_point(position = 'jitter') + coord_flip() + theme(panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, color=Region)) + geom_point(position = 'jitter') + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, color=Region)) + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
g1 <- ggplot(data = mygrid3_cases_alt, mapping = aes(x=reorder(Region, sum_cases), y=sum_cases, color=Region)) + coord_flip() + theme(legend.position = 'none', panel.grid = element_blank()) + labs(x = NULL, y = 'Cases')
g
g1
g1 + geom_bar(stat = 'identity')
g1 + geom_violin()
g1 + geom_boxplot()
g1 + geom_line(size = 1)
g1 + geom_point(size = 1)
g1 + geom_point(size = 3, alpha = 0.15)
g1 + geom_boxplot(color = 'gray60', outlier.alpha = 0) + geom_point(size = 3, alpha = 0.15)
g1 + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + stat_summary(fun.y = mean, geom = 'point', size = 5)
save.image(file = 'ddc_api.RData')
country_avg <- mygrid3_cases_alt %>%
summarize(case_avg = mean(sum_cases)) %>%
pull(case_avg)
View(country_avg)
g1 + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = Region, xend = Region, y = country_avg, yend = sum_cases, size 0.8)) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = Region, xend = Region, y = country_avg, yend = sum_cases, size = 0.8)) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = Region, xend = Region, y = country_avg, yend = sum_cases, size = 0.2)) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = stat_summary(fun.y = mean, geom = 'point', size = 5)), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
mygrid3_cases_alt %>% summarize(case_avg = mean(sum_cases)) %>% pull(case_avg)
mygrid3_cases_alt %>% group_by(Region) %>% summarize(region_case_avg = mean(sum_cases)) %>% pull(region_case_avg)
region_avg <- mygrid3_cases_alt %>% group_by(Region) %>% summarize(region_case_avg = mean(sum_cases)) %>% pull(region_case_avg)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
mygrid3_cases_alt %>% group_by(Region) %>% summarize(region_case_avg = mean(sum_cases))
mygrid3_cases_alt[,'region_avg'] <- NA
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Northern Region', 6.71, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Central Region', 8.33, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Northeastern', 5.38, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Southern', 62.9, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Greater Bangkok', 464, mygrid3_cases_alt$region_avg)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
str(mygrid3_cases_alt)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = as.factor(region_avg)), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
mygrid3_cases_alt$region_avg <- as.integer(mygrid3_cases_alt$region_avg)
str(mygrid3_cases_alt)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
mygrid3_cases_alt$region_avg <- as.factor(mygrid3_cases_alt$region_avg)
str(mygrid3_cases_alt)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mean(sum_cases)), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, region_avg), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = region_avg, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(region_avg, sum_cases), xend = region_avg, y = country_avg, yend = sum_cases), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = col), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = row), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
str(mygrid3_cases_alt)
country_avg
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
mygrid3_cases_alt$region_avg
mygrid3_cases_alt$region_avg <- as.integer(mygrid3_cases_alt$region_avg)
str(mygrid3_cases_alt)
mygrid3_cases_alt$region_avg
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Northern Region', 6.71, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Central Region', 8.33, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Northeastern', 5.38, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Southern', 62.9, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg <- ifelse(mygrid3_cases_alt$Region=='Greater Bangkok', 464, mygrid3_cases_alt$region_avg)
mygrid3_cases_alt$region_avg
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases")
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = 'Bangkok is a huge outlier with the most cases, by far.')
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far'))
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 4, y = 225, color = "gray20", label = 'Regional average')
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 4, y = 225, size = 2.7, color = "gray20", label = 'Regional average')
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average')
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region")
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region") + theme_classic()
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region")
save.image(file = 'ddc_api.RData')
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region")
arrows <- tibble(x1 = c(5.3), x2 =c(5.1), y1 = c(250), y2 =c(country_avg))
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region") + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
save.image(file = 'ddc_api.RData')
arrows <- tibble(x1 = c(5.3, 3.9), x2 =c(5.1, 5.0), y1 = c(250, 260), y2 =c(country_avg, 500))
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region") + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.3, 3.9), x2 =c(5.1, 5.0), y1 = c(250, 260), y2 =c(country_avg, 460))
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region") + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.3, 3.9, 3.9), x2 =c(5.1, 5.0, 4.0), y1 = c(250, 260, 240), y2 =c(country_avg, 455, 55))
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region") + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
g1_text <- g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1450, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region")
g1_text
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.3, 3.9, 3.9, 2.6), x2 =c(5.1, 5.0, 4.0, 2.8), y1 = c(250, 260, 240, 200), y2 =c(country_avg, 455, 55, 47))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.3, 3.9, 3.9, 2.6), x2 =c(5.1, 5.0, 4.0, 2.8), y1 = c(250, 260, 240, 200), y2 =c(country_avg, 455, 55, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.3, 3.9, 3.9, 2.6, 2.4), x2 =c(5.1, 5.0, 4.0, 2.8, 2.2), y1 = c(250, 260, 240, 200, 200), y2 =c(country_avg, 455, 55, 27, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 3.9, 2.6, 2.4), x2 =c(5.1, 5.0, 4.0, 2.8, 2.2), y1 = c(200, 260, 240, 200, 200), y2 =c(country_avg, 455, 55, 27, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 3.9, 2.6, 2.4), x2 =c(5.1, 5.0, 4.0, 2.8, 2.2), y1 = c(200, 260, 240, 200, 200), y2 =c(country_avg, 450, 55, 27, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 3.9, 2.6, 2.4), x2 =c(5.1, 4.9, 4.0, 2.8, 2.2), y1 = c(200, 260, 240, 200, 200), y2 =c(country_avg, 450, 55, 27, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.6, 2.4), x2 =c(5.1, 4.95, 2.8, 2.2), y1 = c(200, 260, 200, 200), y2 =c(country_avg, 450, 27, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.4), x2 =c(5.1, 4.95, 2.8), y1 = c(200, 260, 200), y2 =c(country_avg, 450, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.4), x2 =c(5.1, 4.95, 2.8), y1 = c(200, 260, 170), y2 =c(country_avg, 450, 27))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.4), x2 =c(5.1, 4.95, 2.8), y1 = c(200, 260, 150), y2 =c(country_avg, 450, 22))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.4), x2 =c(5.1, 4.95, 2.8), y1 = c(200, 260, 130), y2 =c(country_avg, 450, 22))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.5), x2 =c(5.1, 4.95, 2.8), y1 = c(200, 260, 130), y2 =c(country_avg, 450, 22))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
g1_arrow <- g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
g1_arrow
g1_text
g1_arrow
save.image(file = 'ddc_api.RData')
g
g1
g1_text
g1_arrow
arrows <- tibble(x1 = c(5.4, 3.9, 2.5, 5.0), x2 =c(5.1, 4.95, 2.8, 5.0), y1 = c(200, 260, 130, 1450), y2 =c(country_avg, 450, 22, 1540))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.5, 5.4), x2 =c(5.1, 4.95, 2.8, 5.2), y1 = c(200, 260, 130, 1450), y2 =c(country_avg, 450, 22, 1540))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
arrows <- tibble(x1 = c(5.4, 3.9, 2.5, 5.4), x2 =c(5.1, 4.95, 2.8, 5.2), y1 = c(200, 260, 130, 1480), y2 =c(country_avg, 450, 22, 1540))
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1400, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region")
g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1400, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region") + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
g1_text <- g1 + geom_segment(aes(x = reorder(Region, sum_cases), xend = Region, y = country_avg, yend = mygrid3_cases_alt$region_avg), size = 0.8) + geom_hline(aes(yintercept = country_avg), color = "gray70", size = 0.6) + stat_summary(fun.y = mean, geom = 'point', size = 5) + geom_jitter(size = 2, alpha = 0.25, width = 0.2) + annotate("text", x = 5.5, y = 250, size = 2.7, color = "gray20", label = "Country-wide average: 47.52 cases") + annotate("text", x = 5.25, y = 1400, size = 2.7, color = "gray20", label = paste0('Bangkok is a huge outlier, \n with the most cases by far')) + annotate('text', x = 3.8, y = 225, size = 2.7, color = "gray20", label = 'Regional average') + annotate('text', x = 2.5, y = 200, size = 2.7, color = 'gray20', label = "Provinces per region")
g1_text
g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
g1_arrow <- g1_text + geom_curve(data = arrows, aes(x = x1, y = y1, xend = x2, yend = y2), arrow = arrow(length = unit(0.07, 'inch')), size = 0.4, color = 'gray20', curvature = -0.3)
ggplot(mygrid3_cases, aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1, fill = color)) + geom_rect(color = '#ffffff') + theme_minimal() + theme(panel.grid = element_blank(), axis.text = element_blank(), axis.title = element_blank()) + geom_text(aes(x = col, y = row, label = code), color = 'black', alpha = 0.8, nudge_x = 0.5, nudge_y = -0.5, size = 3) + scale_y_reverse() + scale_fill_manual(values = c("#bd0026", '#ffffb2', '#fecc5c', '#fd8d3c', '#f03b20')) + theme(legend.position = 'none') + labs(title = "Covid19 cases throughout Thailand", subtitle = 'January - May, 2020')
View(mygrid3_cases)
View(mygrid3_cases_alt)
ggplot(mygrid3_cases_alt, aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1, fill = Region)) + geom_rect(color = '#ffffff') + theme_minimal() + theme(panel.grid = element_blank(), axis.text = element_blank(), axis.title = element_blank()) + geom_text(aes(x = col, y = row, label = code), color = 'black', alpha = 0.8, nudge_x = 0.5, nudge_y = -0.5, size = 3) + scale_y_reverse() + theme(legend.position = 'none')
thai_province_region <- ggplot(mygrid3_cases_alt, aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1, fill = Region)) + geom_rect(color = '#ffffff') + theme_minimal() + theme(panel.grid = element_blank(), axis.text = element_blank(), axis.title = element_blank()) + geom_text(aes(x = col, y = row, label = code), color = 'black', alpha = 0.8, nudge_x = 0.5, nudge_y = -0.5, size = 3) + scale_y_reverse() + theme(legend.position = 'none')
g1_arrow
g1_arrow + annotation_custom(ggplotGrob(thai_province_region), xmin = 1, xmax = 4, ymin = 750, ymax = 1250)
save.image(file = 'ddc_api.RData')
g1_arrow + annotation_custom(ggplotGrob(thai_province_region), xmin = 1, xmax = 5, ymin = 700, ymax = 1250)
g1_arrow + annotation_custom(ggplotGrob(thai_province_region), xmin = 1, xmax = 5, ymin = 700, ymax = 1300)
getwd()
blogdown::serve_site()
blogdown::serve_site()
